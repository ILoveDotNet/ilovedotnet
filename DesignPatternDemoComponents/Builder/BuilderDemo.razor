<p>Mini Car : @_miniCar?.ToString()</p>

<button type="button"
    class="[ bg-cyan-500 ] [ text-white ] [ px-4 py-2 ] [ inline-block ] [ rounded-md ] [ inline-flex ] [ space-x-1 ]"
    @onclick="HandleMiniBuilder">
    Build Mini Car
</button>

<button type="button"
    class="[ bg-fuchsia-500 ] [ text-white ] [ px-4 py-2 ] [ inline-block ] [ rounded-md ] [ inline-flex ] [ space-x-1 ]"
    @onclick="ResetMiniCar">
    Reset
</button>

<p>BMW Car : @_bmwCar?.ToString()</p>

<button type="button"
    class="[ bg-cyan-500 ] [ text-white ] [ px-4 py-2 ] [ inline-block ] [ rounded-md ] [ inline-flex ] [ space-x-1 ]"
    @onclick="HandleBMWBuilder">
    Build BMW Car
</button>

<button type="button"
    class="[ bg-fuchsia-500 ] [ text-white ] [ px-4 py-2 ] [ inline-block ] [ rounded-md ] [ inline-flex ] [ space-x-1 ]"
    @onclick="ResetBMWCar">
    Reset
</button>

@code {
    private Car? _bmwCar;
    private Car? _miniCar;

    private void HandleBMWBuilder()
    {
        var garage = new Garage();
        var bmwBuilder = new BMWBuilder();
        garage.Construct(bmwBuilder);
        _bmwCar = bmwBuilder.GetCar();
        StateHasChanged();
    }

    private void ResetMiniCar()
    {
        _miniCar = null;
        StateHasChanged();
    }

    private void HandleMiniBuilder()
    {
        var garage = new Garage();
        var miniBuilder = new MiniBuilder();
        garage.Construct(miniBuilder);
        _miniCar = miniBuilder.GetCar();
        StateHasChanged();
    }

    private void ResetBMWCar()
    {
        _bmwCar = null;
        StateHasChanged();
    }
}