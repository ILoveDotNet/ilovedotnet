@foreach (var log in logs)
{
    <p>@log</p>
}

<button type="button"
    class="[ bg-cyan-500 ] [ text-white ] [ px-4 py-2 ] [ inline-block ] [ rounded-md ] [ inline-flex ] [ space-x-1 ]"
    @onclick="HandleSingleton">
    Singleton
</button>

<button type="button"
    class="[ bg-fuchsia-500 ] [ text-white ] [ px-4 py-2 ] [ inline-block ] [ rounded-md ] [ inline-flex ] [ space-x-1 ]"
    @onclick="Reset">
    Reset
</button>


@code
{
    private Logger? instance1 = null;
    private Logger? instance2 = null;
    private List<string> logs = new();

    private void HandleSingleton()
    {
        instance1 = Logger.Instance;
        instance2 = Logger.Instance;

        if (instance1 == instance2 && instance2 == Logger.Instance)
        {
            Console.WriteLine("Instances are the same.");
            logs.Add("Instances are the same.");
        }

        instance1.Log($"Message from {nameof(instance1)}");
        logs.Add($"Message from {nameof(instance1)}");
        // or
        instance1.Log($"Message from {nameof(instance2)}");
        logs.Add("Message from {nameof(instance2)}");
        // or
        Logger.Instance.Log($"Message from {nameof(Logger.Instance)}");
        logs.Add($"Message from {nameof(Logger.Instance)}");
    }

    private void Reset()
    {
        instance1 = null;
        instance2 = null;
        logs = new();
    }
}

