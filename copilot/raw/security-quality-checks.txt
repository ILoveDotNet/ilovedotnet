SAST Static Application Security Testing:
Suggest a method for checking whether the third-party dependencies have vulnerabilities and need to be updated.
add a script to fix audit issues.
add a script to check updates using ncu.
include the installation of npm-checks-updates.
add a step to upgrade packages with ncu.
by this time the final package.json will look like
```
"scripts": {
  "build": "npm run clean && webpack --config ./webpack/webpack.config
  "start": "webpack serve --config./webpack/webpack.config.cjs --env
  "clean": "rimraf dist",
  "lint": "eslint ."
  "lint:fix": "eslint. --fix"
  "test": "node --test",
  "audit": "npm audit",
  "audit: fix": "npm audit fix --force",
  "check-updates": "ncu",
  "upgrade-packages": "ncu -u"
}
```
migrate to the new eslint configuration file.
migrate the contents to eslint.config.js
add the audit and check-updates script to the CI workflow

CodeQL:
Integrate COdeQL into this project
Initialise CodeQL with security and quality query
add the javascript-all pack

Shift Left:
Highlight the jobs in ci and prompt - Separate these into stages so that they can run in parallel.
Replace the node-version with a variable
the NODE_VERSION variable is missing
add npm install to each stage
for testing purpose, include a test which is guaranteed to fail
check for all vulnerabilities but fail audit job for critical ones