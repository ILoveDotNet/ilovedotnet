Documenting and Diagramming:
Ensure each job has a descriptive name.
@workspace update the README with a description of what this application is and what it does. Include a description of what the scripts do and how to use them.
Do not trigger the workflow when the README is changed.
Describe the workflow as a mermaid diagram and insert it into the README.
update the diagram to reflect dependencies between each stage
the testing stages are not dependent on each other

Descriptiveness and Collaboration:
Create a commit message.
Create a new stage to deploy the application to production. This stage should be dependent on the staging deployment
deploy-production should only run from changes to main.

Catching secrets and sensitive data:
open eslint.config.js
Update the ESLint configuration to check for passwords and other sensitive information
add the eslint-plugin-security
open ci.yml
Add a stage which runs TruffleHog to check for secrets. Ensure that the testing phases are dependent on this new stage.
select other stages (like audit, lint, test and dependency-update) in ci and prompt - ensure these stages are also dependent on the new stage
select TruffleHog stage and prompt - change this stage to use native github actions.
update the Mermaid diagram in README to reflect the new stage and dependencies.
update the Mermaid diagram to include the production deployment stage.
select publish profile and Populate this from Azure Key Vault.

Note:
Click on select tools spanner icon in prompt window and make sure mermaid tool is selected. For mermaid tool to be available install Mermaid Chart extension.