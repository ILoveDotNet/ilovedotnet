@inject IConfiguration configuration

<Title>@Title - I ❤️ DotNet</Title>

<Meta Property="description" Content="@Description" />
<Meta Property="keywords" Content="@($".NET, DotNet, I Love DotNet, I ❤️ DotNet, Blazor, Blazor (WebAssembly), Blazor Wasm, C#, Entity Framework Core, LINQ, ML.NET, Web API, {string.Join(", ", Keywords)}")" />
<Meta Property="url" Content="@($"{BaseUrl}{ContentType}/{Slug}/")" />
<Meta Property="identifier-URL" Content="@($"{BaseUrl}{ContentType}/{Slug}/")" />
<Meta Property="og:site_name" Content="I Love DotNet" />
<Meta Property="og:type" Content="article" />
<Meta Property="og:title" Content="@Title" />
<Meta Property="og:image" Content="@($"{BaseUrl}image/brand/mini-logo.png")" />
<Meta Property="og:image" Content="@($"{BaseUrl}image/{PosterPath}/{Slug}.png")" />
<Meta Property="og:image:alt" Content="DotNet bot with heart and DotNet brand" />
<Meta Property="og:description" Content="@Description" />
<Meta Property="og:url" Content="@($"{BaseUrl}{ContentType}/{Slug}/")" />
<Meta Property="twitter:card" Content="summary_large_image" />
<Meta Property="twitter:title" Content="@Title" />
<Meta Property="twitter:image" Content="@($"{BaseUrl}image/brand/mini-logo.png")" />
<Meta Property="twitter:image" Content="@($"{BaseUrl}image/{PosterPath}/{Slug}.png")" />
<Meta Property="twitter:image:alt" Content="DotNet bot with heart and DotNet brand" />
<Meta Property="twitter:description" Content="@Description" />
<Meta Property="twitter:url" Content="@($"{BaseUrl}{ContentType}/{Slug}/")" />
<Meta Property="article:published_time" Content="@CreatedOn.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")" />
<Meta Property="article:modified_time" Content="@ModifiedOn.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")" />
<Meta Property="article:tag" Content=".NET" />
<Meta Property="article:tag" Content="DotNet" />
<Meta Property="article:tag" Content="I Love DotNet" />
<Meta Property="article:tag" Content="I ❤️ DotNet" />
<Meta Property="article:tag" Content="Blazor" />
<Meta Property="article:tag" Content="Blazor (WebAssembly)" />
<Meta Property="article:tag" Content="Blazor Wasm" />
<Meta Property="article:tag" Content="C#" />
<Meta Property="article:tag" Content="Entity Framework Core" />
<Meta Property="article:tag" Content="LINQ" />
<Meta Property="article:tag" Content="ML.NET" />
@foreach(var keyword in Keywords)
{
    <Meta Property="article:tag" Content="@keyword" />
}
<Link Rel="sitemap" Href="@($"{BaseUrl}sitemap.xml")" type="application/xml" title="Sitemap" />
<Link Rel="alternate" Href="@($"{BaseUrl}atom.xml")" type="application/rss+xml" />
<Link Rel="alternate" Href="@($"{BaseUrl}{ContentType}/{Slug}/")" hreflang="en" />
<Link Rel="alternate" Href="@($"{BaseUrl}{ContentType}/{Slug}/")" hreflang="x-default" />
<Link Rel="canonical" Href="@($"{BaseUrl}{ContentType}/{Slug}/")" />
<Link Rel="index" Href="@($"{BaseUrl}{ContentType}/{Slug}/")" title="@($"{Title} - I ❤️ DotNet")" />
<HeadContent>
    @(new MarkupString(
    $@"<script type=""application/ld+json"">
    {{
        ""@context"": ""https://schema.org"",
        ""@type"": ""Article"",
        ""publisher"": {{
            ""@type"": ""Organization"",
            ""name"": ""I Love DotNet"",
            ""url"": ""{BaseUrl}"",
            ""logo"": {{
                ""@type"": ""ImageObject"",
                ""url"": ""{BaseUrl}favicon.ico"",
                ""width"": 16,
                ""height"": 16
            }}
        }},
        ""author"": {{
            ""@type"": ""Person"",
            ""name"": ""Abdul Rahman Shabeek Mohamed"",
            ""image"": {{
                ""@type"": ""ImageObject"",
                ""url"": ""//https://media-exp1.licdn.com/dms/image/C5603AQGIbBUf4NvSqA/profile-displayphoto-shrink_200_200/0/1588467007026?e=1648080000&v=beta&t=bbZe_QpTmS_g0w0DxVaJGLPgyXU1bu41QyppAIhZNss"",
                ""width"": 250,
                ""height"": 250
            }},
            ""url"": ""{BaseUrl}author/abdulrahman/"",
            ""sameAs"": [
                ""https://www.linkedin.com/in/fingers10"",
                ""https://github.com/fingers10"",
                ""https://stackoverflow.com/users/10851213/fingers10"",
                ""https://www.youtube.com/channel/UCOS3wCw7SVXjXXffMPqid7A""
            ]
        }},
        ""headline"": ""{Title}"",
        ""url"": ""{BaseUrl}{ContentType}/{Slug}/"",
        ""datePublished"": ""{CreatedOn:yyyy-MM-ddTHH:mm:ss.fffZ}"",
        ""dateModified"": ""{ModifiedOn:yyyy-MM-ddTHH:mm:ss.fffZ}"",
        ""image"": {{
            ""@type"": ""ImageObject"",
            ""url"": ""{BaseUrl}image/{PosterPath}/{Slug}.png"",
            ""width"": 1265,
            ""height"": 827
        }},
        ""keywords"": ""I Love DotNet, Blogs, Blazor, Blazor (WebAssembly), Exception Handling, Error Boundary"",
        ""description"": ""{Description}"",
        ""mainEntityOfPage"": {{
            ""@type"": ""WebPage"",
            ""@id"": ""{BaseUrl}""
        }}
    }}
    </script>"))
</HeadContent>

@code {
    private string BaseUrl => configuration.GetValue<string>("baseUrl");

    [Parameter, EditorRequired] public string Title { get; set; } = default!;
    [Parameter, EditorRequired] public string Description { get; set; } = default!;
    [Parameter, EditorRequired] public DateTime CreatedOn { get; set; }
    [Parameter, EditorRequired] public DateTime ModifiedOn { get; set; }
    [Parameter, EditorRequired] public string Slug { get; set; } = default!;
    [Parameter, EditorRequired] public string PosterPath { get; set; } = default!;
    [Parameter, EditorRequired] public string ContentType { get; set; } = default!;
    [Parameter, EditorRequired] public List<string> Keywords { get; set; } = new();
}
