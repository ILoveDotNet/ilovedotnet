name: build and test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v2

      # Install .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
          
      # Install dotnet wasm buildtools workload
      - name: Install .NET WASM Build Tools
        run: dotnet workload install wasm-tools
          
      # Install Node JS
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '16.13.0'
      - run: npm install
        working-directory: ./Web
        
      # Restore Dependencies
      - name: Restore dependencies
        run: dotnet restore
        
      # Check Vulnerable Nuget Packages
      - name: Checking Vulnerable Nuget Packages
        run: dotnet list package --vulnerable --include-transitive
        
      # Check Outdated Nuget Packages
      - name: Checking Outdated Nuget Packages
        run: dotnet list package --outdated --include-transitive
        
       # Check Deprecated Nuget Packages
      - name: Checking Deprecated Nuget Packages
        run: dotnet list package --deprecated --include-transitive
        
      # Build Project
      - name: Build Solution
        run: dotnet build ./ILoveDotNet.sln --configuration Release --no-restore
      
      # Install dotnet report generator
      - name: Install .NET Report Generator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool
        
      # Run Tests
      - name: Run Test
        run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"
      
      # Generate Test Report
      - name: Generate Test Report
        run: reportgenerator -reports:./**/Coverage.cobertura.xml -targetdir:"./Test/Report" -reporttypes:Html
      
      # Upload Test Report
      - name: Upload Test Result
        uses: actions/upload-artifact@v2
        with:
          name: ilovedotnet-test-report
          path: ./Test/Report
          retention-days: 3
      
      # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
