@page "/"
@inject IConfiguration configuration
@inject TableOfContents tableOfContents

<HeadContent>
    <meta name="description" content="@Description">
    <meta name="keywords" content=".NET, DotNet, I Love DotNet, I ❤️ DotNet, Blazor, Blazor (WebAssembly), Blazor Wasm, C#, Entity Framework Core, LINQ, ML.NET, Web API">
    <meta name="url" content="@BaseUrl">
    <meta name="identifier-URL" content="@BaseUrl">
    <meta property="og:site_name" content="@Title" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="@Title" />
    <meta property="og:description" content="@Description" />
    <meta property="og:url" content="@BaseUrl" />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content="@Title" />
    <meta name="twitter:description" content="@Description" />
    <meta name="twitter:url" content="@BaseUrl" />
    <link rel="alternate" href="@BaseUrl" hreflang="en" />
    <link rel="alternate" href="@BaseUrl" hreflang="x-default" />
    <link rel="canonical" href="@BaseUrl" />
    <link rel="index" title="@Title" href="@BaseUrl" />
    @(new MarkupString(
    $@"<script type=""application/ld+json"">
    {{
        ""@context"": ""https://schema.org"",
        ""@type"": ""WebSite"",
        ""publisher"": {{
            ""@type"": ""Organization"",
            ""name"": ""{Title}"",
            ""url"": ""{BaseUrl}"",
            ""logo"": {{
                ""@type"": ""ImageObject"",
                ""url"": ""{BaseUrl}favicon.ico"",
                ""width"": 16,
                ""height"": 16
            }}
        }},
        ""url"": ""{BaseUrl}"",
        ""mainEntityOfPage"": {{
            ""@type"": ""WebPage"",
            ""@id"": ""{BaseUrl}""
        }},
        ""description"": ""{Description}""
    }}
    </script>"))
</HeadContent>

<section class="[ dark:bg-stone-900 ] [ flex flex-col ] [ space-y-5 ] [ p-5 ]">
    <div class="[ grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4 ]">
        @foreach (var content in tableOfContents.Contents.OrderByDescending(content => content.CreatedOn))
        {
             <Thumbnail PosterUrl="@content.ThumbnailUrl" 
                    ContentUrl="@content.ContentUrl"
                    Title="@content.Title"
                    AltText="@content.Title"
                    IconUrl="@content.IconUrl"
                    IconAlt="@content.Type"
                    CreatedOn="@content.CreatedOn"
                    Author="@content.Author">
            </Thumbnail>           
        }
    </div>
</section>

@code {
    private string Title = "I ❤️ DotNet";
    private string Description = "This is a .NET knowledge sharing platform with live demos crafted by developers for developers with love.";
    private string BaseUrl => configuration.GetValue<string>("baseUrl");
}