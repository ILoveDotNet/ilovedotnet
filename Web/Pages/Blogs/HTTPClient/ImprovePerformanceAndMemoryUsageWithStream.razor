@page "/blogs/improving-performance-and-memory-use-while-accessing-apis-using-httpclient-in-dotnet"
@inherits FragmentNavigationBase
@inject TableOfContents tableOfContents

<Content Title=@Title
         Description=@Description
         CreatedOn=@CreatedOn
         ModifiedOn=@ModifiedOn
         Slug=@Slug
         PosterPath=@PosterPath
         Keywords=@Keywords
         Channel="@Channel"
         ContentType="@ContentType"
         TotalContents=@TotalContents
         FileName=@nameof(ImprovePerformanceAndMemoryUsageWithStream)>
    <ContentBody>
        <p>
            In this article, let's learn about how to <ContentHighlight>improve performance and memory use</ContentHighlight> while accessing APIs with 
            <ContentHighlight>Stream</ContentHighlight> using <ContentHighlight>HTTP Client</ContentHighlight> in .NET.
        </p>

        <h3 class="[ font-semibold text-lg ]">Table of Contents</h3>

        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#introduction")" Match="NavLinkMatch.All">
                    Introduction
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#advantages-of-working-with-stream")" Match="NavLinkMatch.All">
                    Advantages of working with Stream
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#using-stream-while-reading-data-from-api")" Match="NavLinkMatch.All">
                    Using Stream while reading data from API
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#using-stream-while-sending-data-to-api")" Match="NavLinkMatch.All">
                    Using Stream while sending data to API
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#summary")" Match="NavLinkMatch.All">
                    Summary
                </NavLink>
            </li>
        </ol>

        <h3 id="introduction" class="[ font-semibold text-lg ]">Introduction</h3>

        <p>
            
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="advantages-of-working-with-stream" class="[ font-semibold text-lg ]">Advantages of working with Stream</h3>

        <p>
            
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="using-stream-while-reading-data-from-api" class="[ font-semibold text-lg ]">Using Stream while reading data from API</h3>

        <p>
            
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="using-stream-while-sending-data-to-api" class="[ font-semibold text-lg ]">Using Stream while sending data to API</h3>

        <p>
            
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="summary" class="[ font-semibold text-lg ]">Summary</h3>

        <p>
            
        </p>
    </ContentBody>
</Content>

@code {
    private string Title = "Improving performance and memory use while accessing APIs using HTTPClient in dotnet";
    private string Description = "In this post I will teach how to unit test hosted services in ASP.NET web api. All with live working demo.";
    private DateTime CreatedOn = new DateTime(2023, 8, 20, 22, 30, 0);
    private DateTime ModifiedOn = new DateTime(2023, 8, 20, 22, 30, 0);
    private string Slug = "improving-performance-and-memory-use-while-accessing-apis-using-httpclient-in-dotnet";
    private string PosterPath = "Blogs/HTTP-Client";
    private string Channel = "http-client";
    private string ContentType = "blogs";
    private ushort TotalContents => (ushort)tableOfContents.Contents.Count(content => content.Type.Equals("HTTPClient", StringComparison.CurrentCultureIgnoreCase));
    private List<string> Keywords = new(2) { "Memory Stream", "Performance" };
}