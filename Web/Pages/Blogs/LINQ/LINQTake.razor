@page "/blogs/using-linq-take-to-select-specific-data"
@using LINQDemoComponents
@inherits FragmentNavigationBase
@inject TableOfContents tableOfContents

<Content Title=@Title
         Description=@Description
         CreatedOn=@CreatedOn
         ModifiedOn=@ModifiedOn
         Slug=@Slug
         PosterPath=@PosterPath
         Keywords=@Keywords
         Channel="@Channel"
         ContentType="@ContentType"
         TotalContents=@TotalContents
         FileName=@nameof(LINQTake)>
    <ContentBody>
        <p>
            In this article, let's learn about how to use <ContentHighlight>Take</ContentHighlight> and <ContentHighlight>TakeWhile</ContentHighlight> 
            in <ContentHighlight>LINQ</ContentHighlight> in .NET.
        </p>

        <p>
            <strong>Note:</strong> If you have not done so already, I recommend you read the article on
            <NavLink class="[ underline ]" href="blogs/using-linq-single-to-select-single-data" Match="NavLinkMatch.All">Using LINQ Single to Select Single Data in Collections</NavLink>.
        </p>

        <h3 class="[ font-semibold text-lg ]">Table of Contents</h3>

        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#introduction")" Match="NavLinkMatch.All">
                    Introduction
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#take")" Match="NavLinkMatch.All">
                    Perform partition using Take
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#take-range")" Match="NavLinkMatch.All">
                    Perform partition using Take with Range syntax
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#take-while")" Match="NavLinkMatch.All">
                    Perform conditional partition using TakeWhile
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#summary")" Match="NavLinkMatch.All">
                    Summary
                </NavLink>
            </li>
        </ol>

        <h3 id="introduction" class="[ font-semibold text-lg ]">Introduction</h3>

        <p>
            We can perform partition and select specific piece of data from beginning of a collection using LINQ. We're going to use Take() and TakeWhile() methods. Let's take a look at each 
            of these methods and how they work.
        </p>

        <h3 id="take" class="[ font-semibold text-lg ]">Perform partition using Take</h3>

        <p>
            When listing the items, its not always possible to list all the items. Sometimes we need to limit and partition the items from database or need a pagination in UI to display subset 
            of records for better UX (User Experience) as not all the datas are required everytime unless its a reporting task. So <ContentHighlight>Take(n)</ContentHighlight> allows you to 
            take only specific items from beginning of collection. It takes number of items given as input and returns n number of records from collection.
        </p>

        <GithubGistSnippet Title="LINQ Take" UserId="fingers10" FileName="26aee0033340fc75797a738bbad9a1ce"></GithubGistSnippet>

        <DemoSnippet Title="LINQ Take Clause Demo">
            <p>
                Let's try LINQ Take
            </p>

            <ul class="[ list-disc ] [ ml-4 ]">
                <li>We have <ContentHighlight>Product</ContentHighlight> class with following properties - <ContentHighlight>Id, Name, Color, Price, Size</ContentHighlight></li>
                <li>Enter the number of products you would like to list.</li>
                <li>Click on Take by Range Products</li>
                <li>Click on reset to try other combination</li>
            </ul>

            <TakeDemo></TakeDemo>
        </DemoSnippet>

        <h3 id="take-range" class="[ font-semibold text-lg ]">Perform partition using Take with Range syntax</h3>

        <p>
            We can also use the <ContentHighlight>Range Operator</ContentHighlight> with Take() like <ContentHighlight>Take(2..4)</ContentHighlight>, 
            <ContentHighlight>Take(..3)</ContentHighlight>, <ContentHighlight>Take(^2..^4)</ContentHighlight> or <ContentHighlight>Take(3..)</ContentHighlight>.
        </p>

        <GithubGistSnippet Title="LINQ Take using Range Operator" UserId="fingers10" FileName="1571ae3d290158a4b0bf063393425efe"></GithubGistSnippet>

        <DemoSnippet Title="LINQ Take Clause with Range Demo">
            <p>
                Let's try LINQ Take
            </p>

            <ul class="[ list-disc ] [ ml-4 ]">
                <li>We have <ContentHighlight>Product</ContentHighlight> class with following properties - <ContentHighlight>Id, Name, Color, Price, Size</ContentHighlight></li>
                <li>Enter the number of products you would like to list.</li>
                <li>Click on Take Products</li>
                <li>Click on reset to try other combination</li>
            </ul>

            <TakeRangeDemo></TakeRangeDemo>
        </DemoSnippet>

        <h3 id="take-while" class="[ font-semibold text-lg ]">Perform conditional partition using TakeWhile</h3>

        <p>
            We can also extract data conditionally using <ContentHighlight>TakeWhile</ContentHighlight> while the condition evaluates to true. Note that Enumeration stops when the predicate 
            function returns false for an element or when source contains no more elements.
        </p>

        <GithubGistSnippet Title="LINQ TakeWhile" UserId="fingers10" FileName="8d885c8b386397725b173823a204ac47"></GithubGistSnippet>

        <DemoSnippet Title="LINQ TakeWhile Clause Demo">
            <p>
                Let's try LINQ TakeWhile
            </p>

            <ul class="[ list-disc ] [ ml-4 ]">
                <li>We have <ContentHighlight>Product</ContentHighlight> class with following properties - <ContentHighlight>Id, Name, Color, Price, Size</ContentHighlight></li>
                <li>Enter the condition based on which you like to select.</li>
                <li>Click on TakeWhile Products</li>
                <li>Click on reset to try other combination</li>
            </ul>

            <TakeWhileDemo></TakeWhileDemo>
        </DemoSnippet>

        <h3 id="summary" class="[ font-semibold text-lg ]">Summary</h3>

        <p>
            In this article we learn't how to locate partition and extract specific data within collection using <ContentHighlight>Take</ContentHighlight> and 
            <ContentHighlight>TakeWhile</ContentHighlight>. We saw that there's an option to supply range of values using range operator. We also saw how we can pass an condition to partition 
            data. All these can be used with any <ContentHighlight>IEnumerable</ContentHighlight> or <ContentHighlight>IQueryable</ContentHighlight> types.
        </p>
    </ContentBody>
</Content>

@code {
    private string Title = "Using LINQ Take to Select Specific Data";
    private string Description = "In this post I will teach you how to select specific data within collections using LINQ in .NET. All with live working demo.";
    private DateTime CreatedOn = new DateTime(2022, 10, 16, 22, 30, 0);
    private DateTime ModifiedOn = new DateTime(2022, 10, 16, 22, 30, 0);
    private string Slug = "using-linq-take-to-select-specific-data";
    private string PosterPath = "Blogs/LINQ";
    private string Channel = "linq";
    private string ContentType = "blogs";
    private ushort TotalContents => (ushort)tableOfContents.Contents.Count(content => content.Type.Equals("LINQ", StringComparison.CurrentCultureIgnoreCase));
    private List<string> Keywords = new(3) { "Take", "TakeWhile", "Partition" };
}