@page "/blogs/using-linq-any-to-find-type-of-data"
@using LINQDemoComponents
@inherits FragmentNavigationBase
@inject TableOfContents tableOfContents

<Content Title=@Title
         Description=@Description
         CreatedOn=@CreatedOn
         ModifiedOn=@ModifiedOn
         Slug=@Slug
         PosterPath=@PosterPath
         Keywords=@Keywords
         Channel="@Channel"
         ContentType="@ContentType"
         TotalContents=@TotalContents
         FileName=@nameof(LINQAny)>
    <ContentBody>
        <p>
            In this article, let's learn about how to use <ContentHighlight>Any</ContentHighlight> in <ContentHighlight>LINQ</ContentHighlight> in .NET.
        </p>

        <p>
            <strong>Note:</strong> If you have not done so already, I recommend you read the article on
            <NavLink class="[ underline ]" href="blogs/using-linq-all-to-find-type-of-data" Match="NavLinkMatch.All">Using LINQ All to Find Type of Data</NavLink>.
        </p>

        <h3 class="[ font-semibold text-lg ]">Table of Contents</h3>

        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#introduction")" Match="NavLinkMatch.All">
                    Introduction
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#any")" Match="NavLinkMatch.All">
                    Common uses of Any method
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#summary")" Match="NavLinkMatch.All">
                    Summary
                </NavLink>
            </li>
        </ol>

        <h3 id="introduction" class="[ font-semibold text-lg ]">Introduction</h3>

        <p>
            We can determine the type of data contained within the collection using LINQ <ContentHighlight>Any()</ContentHighlight> method. The idea here is to find out if any items in a 
            collection meet a specific condition. For primitive data types like <ContentHighlight>int</ContentHighlight>, <ContentHighlight>decimal</ContentHighlight>, 
            <ContentHighlight>string</ContentHighlight>, etc we can just compare the values against other value in the collection.
        </p>

        <h3 id="any" class="[ font-semibold text-lg ]">Common uses of Any method</h3>

        <p>
            LINQ <ContentHighlight>Any()</ContentHighlight> is used to answer questions about collection such as, any students passed the exam?, Do any orders got shipped? Do any customers 
            opted for newsletters?. Let's take a look at syntax. The syntax for Any() is we apply the Any() method to some <ContentHighlight>IEnumerable&lt;T&gt;</ContentHighlight> collection 
            and we specify a predicate. This is then going to check if any items within the collection match the given condition. For example, 
            <ContentHighlight CssClasses="[ break-all ]">IEnumerable&lt;T&gt;.Any(predicate)</ContentHighlight>. This will return a boolean value true or false indicating do 
            any element in the collection met the criteria?. The boolean result will be returned as soon as first match is found. This will not scan the entire collection.
        </p>

        <GithubGistSnippet Title="LINQ Any" UserId="fingers10" FileName="1bca387e90a336bcc1dbb344c358f97c"></GithubGistSnippet>

        <DemoSnippet Title="LINQ Any Clause Demo">
            <p>
                Let's try LINQ Any
            </p>

            <ul class="[ list-disc ] [ ml-4 ]">
                <li>We have <ContentHighlight>Product</ContentHighlight> class with following properties - <ContentHighlight>Id, Name, Color, Price, Size</ContentHighlight></li>
                <li>Enter the predicate to find if any product matches the condition.</li>
                <li>Click on Any Button</li>
                <li>Click on reset to try other combination</li>
            </ul>

            <AnyDemo></AnyDemo>
        </DemoSnippet>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="summary" class="[ font-semibold text-lg ]">Summary</h3>

        <p>
            In this article we learn't how to find type of data contained within collection using <ContentHighlight>Any</ContentHighlight>. This can be used to find if any items within 
            collection matches a criteria or not. All these can be used with any <ContentHighlight>IEnumerable</ContentHighlight> or <ContentHighlight>IQueryable</ContentHighlight> types.
        </p>
    </ContentBody>
</Content>

@code {
    private string Title = "Using LINQ Any to Find Type of Data";
    private string Description = "In this post I will teach you how to find type of data contained in collections using LINQ in .NET. All with live working demo.";
    private DateTime CreatedOn = new DateTime(2022, 11, 20, 22, 30, 0);
    private DateTime ModifiedOn = new DateTime(2022, 11, 20, 22, 30, 0);
    private string Slug = "using-linq-any-to-find-type-of-data";
    private string PosterPath = "Blogs/LINQ";
    private string Channel = "linq";
    private string ContentType = "blogs";
    private ushort TotalContents => (ushort)tableOfContents.Contents.Count(content => content.Type.Equals("LINQ", StringComparison.CurrentCultureIgnoreCase));
    private List<string> Keywords = new(1) { "Any" };
}