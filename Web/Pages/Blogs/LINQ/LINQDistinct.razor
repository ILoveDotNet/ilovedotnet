@page "/blogs/using-linq-distinct-to-select-specific-data"
@inherits FragmentNavigationBase
@inject TableOfContents tableOfContents
@using LINQDemoComponents

<Content Title=@Title
         Description=@Description
         CreatedOn=@CreatedOn
         ModifiedOn=@ModifiedOn
         Slug=@Slug
         PosterPath=@PosterPath
         Keywords=@Keywords
         Channel="@Channel"
         ContentType="@ContentType"
         TotalContents=@TotalContents
         FileName=@nameof(LINQDistinct)>
    <ContentBody>
        <p>
            In this article, let's learn about how to use <ContentHighlight>Distinct</ContentHighlight> and <ContentHighlight>DistinctBy</ContentHighlight> 
            in <ContentHighlight>LINQ</ContentHighlight> in .NET.
        </p>

        <p>
            <strong>Note:</strong> If you have not done so already, I recommend you read the article on
            <NavLink class="[ underline ]" href="blogs/using-linq-skip-to-select-specific-data" Match="NavLinkMatch.All">Using LINQ Skip to Select Specific Data in Collections</NavLink>.
        </p>

        <h3 class="[ font-semibold text-lg ]">Table of Contents</h3>

        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#introduction")" Match="NavLinkMatch.All">
                    Introduction
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#distinct")" Match="NavLinkMatch.All">
                    Get Unique items using Distinct
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#distinct-by")" Match="NavLinkMatch.All">
                    Get Unique items using DistinctBy
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#summary")" Match="NavLinkMatch.All">
                    Summary
                </NavLink>
            </li>
        </ol>

        <h3 id="introduction" class="[ font-semibold text-lg ]">Introduction</h3>

        <p>
            We can unique piece of data from beginning of a collection using LINQ. We're going to 
            use Distinct() and DistinctBy() methods. Let's take a look at each of these methods and how they work.
        </p>

        <h3 id="distinct" class="[ font-semibold text-lg ]">Get Unique items using Distinct</h3>

        <p>
            sometimes we need to get just a distinct value out of the collection. For instance, we have a bunch of colors in there, we have 
            a few blacks, we have a few violets, we have a few reds,etc., so what we might want to do is say I just want to see the distinct 
            colors, I don't want them all duplicated. So, let's take a look at how we can do that using LINQ and get the unique items.
        </p>

        <GithubGistSnippet Title="LINQ Distinct" UserId="fingers10" FileName="476855ddff7fdc14b08d788652d6ceb7"></GithubGistSnippet>

        <DemoSnippet Title="LINQ Distinct Clause Demo">
            <p>
                Let's try LINQ Distinct
            </p>

            <ul class="[ list-disc ] [ ml-4 ]">
                <li>We have <ContentHighlight>Product</ContentHighlight> class with following properties - <ContentHighlight>Id, Name, Color, Price, Size</ContentHighlight></li>
                <li>Enter the number of products you would like to list.</li>
                <li>Click on Get Distinct Products</li>
                <li>Click on reset to try other combination</li>
            </ul>

            <DistinctDemo></DistinctDemo>
        </DemoSnippet>

        <h3 id="distinct-by" class="[ font-semibold text-lg ]">Get Unique items using DistinctBy</h3>

        <p>
            We can also extract data conditionally using <ContentHighlight>DistinctBy</ContentHighlight> while the condition 
            evaluates to true.
        </p>

        <GithubGistSnippet Title="LINQ DistinctBy" UserId="fingers10" FileName="c621f54b1501a5bb5b5df105f28e2634"></GithubGistSnippet>

        <DemoSnippet Title="LINQ DistinctBy Clause Demo">
            <p>
                Let's try LINQ DistinctBy
            </p>

            <ul class="[ list-disc ] [ ml-4 ]">
                <li>We have <ContentHighlight>Product</ContentHighlight> class with following properties - <ContentHighlight>Id, Name, Color, Price, Size</ContentHighlight></li>
                <li>Enter the condition based on which you like to select.</li>
                <li>Click on Get Distinct Products</li>
                <li>Click on reset to try other combination</li>
            </ul>

            <DistinctByDemo></DistinctByDemo>
        </DemoSnippet>

        <h3 id="summary" class="[ font-semibold text-lg ]">Summary</h3>

        <p>
            In this article we learn't how to locate partition and extract specific data within collection using 
            <ContentHighlight>Distinct</ContentHighlight> and <ContentHighlight>DistinctBy</ContentHighlight>.All these can be 
            used with any <ContentHighlight>IEnumerable</ContentHighlight> or <ContentHighlight>IQueryable</ContentHighlight> types.
        </p>
    </ContentBody>
</Content>

@code {
    private string Title = "Using LINQ Distinct to Select Specific Data";
    private string Description = "In this post I will teach you how to select specific data within collections using LINQ in .NET. All with live working demo.";
    private DateTime CreatedOn = new DateTime(2022, 11, 6, 22, 30, 0);
    private DateTime ModifiedOn = new DateTime(2022, 11, 6, 22, 30, 0);
    private string Slug = "using-linq-distinct-to-select-specific-data";
    private string PosterPath = "Blogs/LINQ";
    private string Channel = "linq";
    private string ContentType = "blogs";
    private ushort TotalContents => (ushort)tableOfContents.Contents.Count(content => content.Type.Equals("LINQ", StringComparison.CurrentCultureIgnoreCase));
    private List<string> Keywords = new(3) { "Distinct", "DistinctBy", "Unique" };
}