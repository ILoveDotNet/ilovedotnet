@page "/channels/{Name}"
@using Humanizer
@using Toolbelt.Blazor.HeadElement
@inject IConfiguration configuration

<Title>@Title</Title>
<Meta Property="description" Content="@Description" />
<Meta Property="keywords" Content=".NET, DotNet, I Love DotNet, I ❤️ DotNet, Blazor, Blazor (WebAssembly), Blazor Wasm, C#, Entity Framework Core, LINQ, ML.NET, Web API" />
<Meta Property="url" Content="@Url" />
<Meta Property="identifier-URL" Content="@Url" />
<Meta Property="og:site_name" Content="@Title" />
<Meta Property="og:type" Content="website" />
<Meta Property="og:title" Content="@Title" />
<Meta Property="og:image" Content="@($"{BaseUrl}image/brand/mini-banner-logo.png")" />
<Meta Property="og:image" Content="@($"{BaseUrl}image/brand/mini-logo.png")" />
<Meta Property="og:image:alt" Content="DotNet bot with heart and DotNet brand" />
<Meta Property="og:description" Content="@Description" />
<Meta Property="og:url" Content="@Url" />
<Meta Property="twitter:card" Content="summary" />
<Meta Property="twitter:title" Content="@Title" />
<Meta Property="twitter:image" Content="@($"{BaseUrl}image/brand/mini-banner-logo.png")" />
<Meta Property="twitter:image" Content="@($"{BaseUrl}image/brand/mini-logo.png")" />
<Meta Property="twitter:image:alt" Content="DotNet bot with heart and DotNet brand" />
<Meta Property="twitter:description" Content="@Description" />
<Meta Property="twitter:url" Content="@Url" />
<Link Rel="sitemap" Href="@($"{BaseUrl}sitemap.xml")" type="application/xml" title="Sitemap" />
<Link Rel="alternate" Href="@($"{BaseUrl}atom.xml")" type="application/rss+xml" />
<Link Rel="alternate" Href="@Url" hreflang="en" />
<Link Rel="alternate" Href="@Url" hreflang="x-default" />
<Link Rel="canonical" Href="@Url" />
<Link Rel="index" Href="@Url" title="@Title" />
<HeadContent>
    @(new MarkupString(
    $@"<script type=""application/ld+json"">
    {{
        ""@context"": ""https://schema.org"",
        ""@type"": ""WebSite"",
        ""publisher"": {{
            ""@type"": ""Organization"",
            ""name"": ""{Title}"",
            ""url"": ""{Url}"",
            ""logo"": {{
                ""@type"": ""ImageObject"",
                ""url"": ""{BaseUrl}favicon.ico"",
                ""width"": 16,
                ""height"": 16
            }}
        }},
        ""url"": ""{Url}"",
        ""mainEntityOfPage"": {{
            ""@type"": ""WebPage"",
            ""@id"": ""{Url}""
        }},
        ""description"": ""{Description}""
    }}
    </script>"))
</HeadContent>

<section class="[ dark:bg-stone-900 ] [ flex flex-col ] [ space-y-5 ]">
    <div class="[ flex items-center justify-around ] [ w-full ] [ h-52 ] [ bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 ]">
        <h2 class="[ text-4xl md:text-9xl uppercase break-words ]">@ContentType</h2>
    </div>
    <div class="[ mx-auto md:mx-24 ] [ flex flex-col md:flex-row items-center justify-between ] [ space-y-1 md:space-y-0 ]">
        <main class="[ flex ]">
            <aside>
                <figure class="[ mt-2 mr-2 ]">
                    <img src="@($"/image/icons/{Name}.png")" alt="@Name" loading="lazy" height="48" width="48" class="[ rounded-full ]" />
                </figure>
            </aside>
            <article class="[ flex flex-col justify-between ] [ dark:text-white ] [ mt-2 ]">
                <h2 class="[ font-medium break-words ]">@ContentType</h2>
                <section class="[ flex justify-between ]">
                    <p>@Contents.Count Articles</p>
                </section>
            </article>
        </main>
        <NavLink href="https://github.com/ILoveDotNet/ilovedotnet" target="_blank" class="[ md:bg-red-700 ] [ text-red-500 md:text-white uppercase ] [ px-2.5 py-1.5 ] [ font-semibold ]">Improve</NavLink>
    </div>
    <div class="[ grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-1 px-5 md:px-24 ]">
        @foreach (var content in Contents)
        {
            <Thumbnail PosterUrl="@content.ThumbnailUrl"
                   ContentUrl="@content.ContentUrl"
                   Title="@content.Title"
                   AltText="@content.Title"
                   IconUrl="@content.IconUrl"
                   IconAlt="@content.Type"
                   CreatedOn="@content.CreatedOn"
                   Author="@content.Author">
            </Thumbnail>
        }
    </div>
</section>

@code {
    private string ContentType => $"{Name.Humanize(LetterCasing.Title)}";
    private string Title => $"{ContentType} - I ❤️ DotNet";
    private string Description => $"This is a .NET {ContentType} knowledge sharing channel with live demos crafted by developers for developers with love.";
    private string BaseUrl => configuration.GetValue<string>("baseUrl");
    private string Url => $"{BaseUrl}channels/{Name.ToLower()}";
    private List<ContentMetaData> Contents = new(0);

    [Inject] private NavigationManager NavigationManager { get; set; } = default!;
    [Inject] private TableOfContents TableOfContents { get; set; } = default!;

    [Parameter, EditorRequired] public string Name { get; set; } = default!;

    protected override void OnInitialized()
    {
        Contents = TableOfContents.Contents
                                  .Where(content => content.Type.Equals(Name, StringComparison.OrdinalIgnoreCase))
                                  .OrderByDescending(content => content.CreatedOn)
                                  .ToList();

        if (Contents.Count == 0) 
        {
            NavigationManager.NavigateTo("/");
        }
    }
}