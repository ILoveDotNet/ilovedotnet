@inject IConfiguration configuration

<PageTitle>@Title - I ❤️ DotNet</PageTitle>

<HeadContent>
    <meta name="description" content="@Description">
    <meta name="keywords" content="@($".NET, DotNet, I Love DotNet, I ❤️ DotNet, Blazor, Blazor (WebAssembly), Blazor Wasm, C#, Entity Framework Core, LINQ, ML.NET, {string.Join(", ", Keywords)}")">
    <meta name="url" content="@($"{BaseUrl}blogs/{Slug}/")">
    <meta name="identifier-URL" content="@($"{BaseUrl}blogs/{Slug}/")">
    <meta property="og:site_name" content="I Love DotNet" />
    <meta property="og:type" content="article" />
    <meta property="og:title" content="@Title" />
    <meta property="og:description" content="@Description" />
    <meta property="og:url" content="@($"{BaseUrl}blogs/{Slug}/")" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="@Title" />
    <meta name="twitter:description" content="@Description" />
    <meta name="twitter:url" content="@($"{BaseUrl}blogs/{Slug}/")" />
    <meta property="article:published_time" content="@CreatedOn.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")" />
    <meta property="article:modified_time" content="@ModifiedOn.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")" />
    <meta property="article:tag" content=".NET" />
    <meta property="article:tag" content="DotNet" />
    <meta property="article:tag" content="I Love DotNet" />
    <meta property="article:tag" content="I ❤️ DotNet" />
    <meta property="article:tag" content="Blazor" />
    <meta property="article:tag" content="Blazor (WebAssembly)" />
    <meta property="article:tag" content="Blazor Wasm" />
    <meta property="article:tag" content="C#" />
    <meta property="article:tag" content="Entity Framework Core" />
    <meta property="article:tag" content="LINQ" />
    <meta property="article:tag" content="ML.NET" />
    @foreach(var keyword in Keywords)
    {
        <meta property="article:tag" content="@keyword" />
    }
    <link rel="sitemap" type="application/xml" title="Sitemap" href="@($"{BaseUrl}sitemap.xml")" />
    <link rel="alternate" type="application/rss+xml" href="@($"{BaseUrl}atom.xml")">
    <link rel="alternate" href="@($"{BaseUrl}blogs/{Slug}/")" hreflang="en" />
    <link rel="alternate" href="@($"{BaseUrl}blogs/{Slug}/")" hreflang="x-default" />
    <link rel="canonical" href="@($"{BaseUrl}blogs/{Slug}/")" />
    <link rel="index" title="@Title - I ❤️ DotNet" href="@($"{BaseUrl}blogs/{Slug}/")" />
    @(new MarkupString(
    $@"<script type=""application/ld+json"">
    {{
        ""@context"": ""https://schema.org"",
        ""@type"": ""Article"",
        ""publisher"": {{
            ""@type"": ""Organization"",
            ""name"": ""I Love DotNet"",
            ""url"": ""{BaseUrl}"",
            ""logo"": {{
                ""@type"": ""ImageObject"",
                ""url"": ""{BaseUrl}favicon.ico"",
                ""width"": 16,
                ""height"": 16
            }}
        }},
        ""author"": {{
            ""@type"": ""Person"",
            ""name"": ""Abdul Rahman Shabeek Mohamed"",
            ""image"": {{
                ""@type"": ""ImageObject"",
                ""url"": ""//https://media-exp1.licdn.com/dms/image/C5603AQGIbBUf4NvSqA/profile-displayphoto-shrink_200_200/0/1588467007026?e=1648080000&v=beta&t=bbZe_QpTmS_g0w0DxVaJGLPgyXU1bu41QyppAIhZNss"",
                ""width"": 250,
                ""height"": 250
            }},
            ""url"": ""{BaseUrl}author/abdulrahman/"",
            ""sameAs"": [
                ""https://www.linkedin.com/in/fingers10"",
                ""https://github.com/fingers10"",
                ""https://stackoverflow.com/users/10851213/fingers10"",
                ""https://www.youtube.com/channel/UCOS3wCw7SVXjXXffMPqid7A""
            ]
        }},
        ""headline"": ""{Title}"",
        ""url"": ""{BaseUrl}blogs/{Slug}/"",
        ""datePublished"": ""{CreatedOn:yyyy-MM-ddTHH:mm:ss.fffZ}"",
        ""dateModified"": ""{ModifiedOn:yyyy-MM-ddTHH:mm:ss.fffZ}"",
        ""image"": {{
            ""@type"": ""ImageObject"",
            ""url"": ""{BaseUrl}image/blogs/blazor/wasm/{Slug}-1200w.svg"",
            ""width"": 1265,
            ""height"": 827
        }},
        ""keywords"": ""I Love DotNet, Blogs, Blazor, Blazor (WebAssembly), Exception Handling, Error Boundary"",
        ""description"": ""{Description}"",
        ""mainEntityOfPage"": {{
            ""@type"": ""WebPage"",
            ""@id"": ""{BaseUrl}""
        }}
    }}
    </script>"))
</HeadContent>

@code {
    private string BaseUrl => configuration.GetValue<string>("baseUrl");

    [Parameter, EditorRequired] public string Title { get; set; } = default!;
    [Parameter, EditorRequired] public string Description { get; set; } = default!;
    [Parameter, EditorRequired] public DateTime CreatedOn { get; set; }
    [Parameter, EditorRequired] public DateTime ModifiedOn { get; set; }
    [Parameter, EditorRequired] public string Slug { get; set; } = default!;
    [Parameter, EditorRequired] public List<string> Keywords { get; set; } = new();
}
