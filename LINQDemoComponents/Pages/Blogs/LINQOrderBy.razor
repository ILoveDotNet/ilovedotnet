@page "/blogs/using-linq-orderby-to-sort-data"
@using LINQDemoComponents
@inherits FragmentNavigationBase
@inject TableOfContents tableOfContents

<Content Slug=@Slug
         PosterPath=@PosterPath
         ContentType="@ContentType"
         FileName=@nameof(LINQOrderBy)>
    <ContentBody>
        <p>
            In this article, let's learn about how to use <ContentHighlight>OrderBy</ContentHighlight> in <ContentHighlight>LINQ</ContentHighlight> in .NET.
        </p>

        <p>
            <strong>Note:</strong> If you have not done so already, I recommend you read the article on
            <NavLink class="[ underline ]" href="blogs/using-linq-to-select-and-project-data" Match="NavLinkMatch.All">Using LINQ to Select and Project Data</NavLink>.
        </p>

        <h3 class="[ font-semibold text-lg ]">Table of Contents</h3>
        
        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#introduction")" Match="NavLinkMatch.All">
                    Introduction
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#tldr")" Match="NavLinkMatch.All">
                    TLDR
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#single-property")" Match="NavLinkMatch.All">
                    Single Property
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#single-property-descending")" Match="NavLinkMatch.All">
                    Single Property in Descending
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#multiple-properties")" Match="NavLinkMatch.All">
                    Multiple Properties
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#multiple-properties-descending")" Match="NavLinkMatch.All">
                    Multiple Properties in Descending
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#summary")" Match="NavLinkMatch.All">
                    Summary
                </NavLink>
            </li>
        </ol>

        <h3 id="introduction" class="[ font-semibold text-lg ]">Introduction</h3>
        
        <p>
            We can use LINQ <ContentHighlight>OrderBy</ContentHighlight> to sort data within collections. <ContentHighlight>ThenBy</ContentHighlight> can be chained to sort by more than one 
            column. Sorting can be done in both ascending and descending order. Default sort is done in ascending order.
        </p>

        <p>
            LINQ has the following sort methods which can be chained and used in any combination.
        </p>

        <ul class="[ list-disc ] [ ml-4 ]">
            <li>OrderBy()</li>
            <li>ThenBy()</li>
            <li>OrderByDescending()</li>
            <li>ThenByDescending()</li>
        </ul>

        <h3 id="tldr" class="[ font-semibold text-lg ]">TLDR</h3>

        <figure>
            <img src="./image/blogs/linq/orderby/LINQ OrderBy in DotNet.png" alt="LINQ OrderBy in .NET" class="[ w-full ]" />
        </figure>

        <h3 id="single-property" class="[ font-semibold text-lg ]">OrderBy Single Property</h3>

        <p>
            The following example shows how to sort <ContentHighlight>Product</ContentHighlight> class by Name in ascending order.
        </p>

        <GithubGistSnippet Title="LINQ OrderBy Single Property" UserId="fingers10" FileName="ca6f7c557dea653c3469ffe9d620b148"></GithubGistSnippet>

        <h3 id="single-property-descending" class="[ font-semibold text-lg ]">OrderBy Single Property in Descending</h3>

        <p>
            The following example shows how to sort <ContentHighlight>Product</ContentHighlight> class by Name in descending order.
        </p>

        <GithubGistSnippet Title="LINQ OrderBy Single Property in Descending" UserId="fingers10" FileName="4098979482aa669bd89b1d668be202bd"></GithubGistSnippet>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="multiple-properties" class="[ font-semibold text-lg ]">OrderBy Multiple Properties</h3>

        <p>
            The following example shows how to sort <ContentHighlight>Product</ContentHighlight> class with more than one property in ascending order.
        </p>

        <GithubGistSnippet Title="LINQ OrderBy Multiple Properties" UserId="fingers10" FileName="e418b51ff68741d13ecbc833b883d30c"></GithubGistSnippet>

        <h3 id="multiple-properties-descending" class="[ font-semibold text-lg ]">OrderBy Multiple Properties in Descending</h3>

        <p>
            The following example shows how to sort <ContentHighlight>Product</ContentHighlight> class with more than one property in descending order.
        </p>

        <GithubGistSnippet Title="LINQ OrderBy Multiple Properties in Descending" UserId="fingers10" FileName="eda9537c7a5f15d2791d8455f0c414af"></GithubGistSnippet>

        <DemoSnippet Title="LINQ OrderBy Clause Demo">
            <p>
                Let's try LINQ OrderBy
            </p>

            <ul class="[ list-disc ] [ ml-4 ]">
                <li>We have <ContentHighlight>Product</ContentHighlight> class with following properties - <ContentHighlight>Id, Name, Color, Price, Size</ContentHighlight></li>
                <li>Enter the column names you would like to sort. To sort in descending order enter column name and leave a space and enter desc. Example, <ContentHighlight>Name desc</ContentHighlight></li>
                <li>Click on Order By Button</li>
                <li>Click on reset to try other combination</li>
            </ul>

            <OrderByDemo></OrderByDemo>
        </DemoSnippet>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="summary" class="[ font-semibold text-lg ]">Summary</h3>

        <p>
            In this article we learn't how to sort data within collection using LINQ. We also learn't how to sort with multiple fields. All these can be used with any 
            <ContentHighlight>IEnumerable</ContentHighlight> or <ContentHighlight>IQueryable</ContentHighlight> types.
        </p>
    </ContentBody>
</Content>

@code {
    private string Slug = "using-linq-orderby-to-sort-data";
    private string PosterPath = "Blogs/LINQ";
    private string ContentType = "blogs";
}