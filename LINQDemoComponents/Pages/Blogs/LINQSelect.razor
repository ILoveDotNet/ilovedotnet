@page "/blogs/using-linq-to-select-and-project-data"
@using LINQDemoComponents
@inherits BasePage

<Content FileName=@nameof(LINQSelect)>
    <ContentBody>
        <p>
            In this article, let's learn about how to use <ContentHighlight>Select</ContentHighlight> in <ContentHighlight>LINQ</ContentHighlight> in .NET.
        </p>

        <p>
            <strong>Note:</strong> If you have not done so already, I recommend you read the article on
            <NavLink href="blogs/linq-introduction" Match="NavLinkMatch.All">Introducing LINQ in .NET</NavLink>.
        </p>

        <h3>Table of Contents</h3>
        
        <ol>
            <li>
                <NavLink href="@($"blogs/{Slug}#introduction")" Match="NavLinkMatch.All">
                    Introduction
                </NavLink>
            </li>
            <li>
                <NavLink href="@($"blogs/{Slug}#tldr")" Match="NavLinkMatch.All">
                    TLDR
                </NavLink>
            </li>
            <li>
                <NavLink href="@($"blogs/{Slug}#complete-object")" Match="NavLinkMatch.All">
                    Complete Object
                </NavLink>
            </li>
            <li>
                <NavLink href="@($"blogs/{Slug}#single-property")" Match="NavLinkMatch.All">
                    Single Property
                </NavLink>
            </li>
            <li>
                <NavLink href="@($"blogs/{Slug}#specific-properties")" Match="NavLinkMatch.All">
                    Specific Properties
                </NavLink>
            </li>
            <li>
                <NavLink href="@($"blogs/{Slug}#build-anonymous-class")" Match="NavLinkMatch.All">
                    Build Anonymous Class
                </NavLink>
            </li>
            <li>
                <NavLink href="@($"blogs/{Slug}#summary")" Match="NavLinkMatch.All">
                    Summary
                </NavLink>
            </li>
        </ol>

        <h3 id="introduction">Introduction</h3>
        
        <p>
            We can use LINQ <ContentHighlight>Select</ContentHighlight> to select data within collections. The select clause produces the results of the query and specifies the "shape" or 
            type of each returned element. For example, you can specify whether your results will consist of complete objects, just one member, a subset of members, or some completely different 
            result type based on a computation or new object creation. When the select clause produces something other than a copy of the source element, the operation is called a 
            <ContentHighlight>projection</ContentHighlight>. The use of projections to transform data is a powerful capability of LINQ query expressions.
        </p>

        <p>
            We can use LINQ Select to shape data and,
        </p>

        <ul>
            <li>Select Complete Object</li>
            <li>Select Single Property</li>
            <li>Select Specific Properties</li>
            <li>Select and Build Anonymous Class</li>
        </ul>

        <h3 id="tldr">TLDR</h3>

        <figure>
            <img src="./image/blogs/linq/select/linq-select-in-dotnet.png" alt="linq select in dotnet" class="[ w-full ]" />
        </figure>

        <h3 id="complete-object">Select Complete Object</h3>

        <p>
            The following example shows how to select entire <ContentHighlight>Product</ContentHighlight> class and create a copy of it.
        </p>

        <GithubGistSnippet Title="LINQ Select Complete Object" UserId="fingers10" FileName="9e688a2ed28a784f50f36b368af1faf5"></GithubGistSnippet>

        <h3 id="single-property">Select Single Property</h3>

        <p>
            The following example shows how to select single property of <ContentHighlight>Product</ContentHighlight> class and create a <ContentHighlight>List&lt;string&gt;</ContentHighlight>.
        </p>

        <GithubGistSnippet Title="LINQ Select Single Property" UserId="fingers10" FileName="347982a6d16975cfd6a62a8c0a564dbf"></GithubGistSnippet>

        

        <h3 id="specific-properties">Select Specific Properties</h3>

        <p>
            The following example shows how to select specific properties from <ContentHighlight>Product</ContentHighlight> class and create a copy of it.
        </p>

        <GithubGistSnippet Title="LINQ Select Specific Properties" UserId="fingers10" FileName="a875b3b7fa3e6c255a0281311c6020a9"></GithubGistSnippet>

        <h3 id="build-anonymous-class">Select and Build Anonymous Class</h3>

        <p>
            The following example shows how to change shape or build an <ContentHighlight>anonymous</ContentHighlight> class and create a copy of it.
        </p>

        <GithubGistSnippet Title="LINQ Select and Build Anonymous Class" UserId="fingers10" FileName="a3b73507d3d7590f7a7c16619e375222"></GithubGistSnippet>

        <DemoSnippet Title="LINQ Select Clause Demo">
            <p>
                Let's try LINQ Select
            </p>

            <ul class="[ list-disc ] [ ml-4 ]">
                <li>We have <ContentHighlight>Product</ContentHighlight> class with following properties - <ContentHighlight>Id, Name, Color, Price, Size</ContentHighlight></li>
                <li>Enter the column names you would like to select. Columns not selected will have default value</li>
                <li>Click on Select Button</li>
                <li>Click on reset to try other combination</li>
            </ul>

            <SelectDemo></SelectDemo>

        </DemoSnippet>

        

        <h3 id="summary">Summary</h3>

        <p>
            In this article we learn't how to Select data within collection using LINQ. We also learn't how to project the data, change shape, how to select complete object, how to select 
            single property, how to select specific properties and how to build an anonymous class. All these can be used with any <ContentHighlight>IEnumerable</ContentHighlight> or 
            <ContentHighlight>IQueryable</ContentHighlight> types.
        </p>
    </ContentBody>
</Content>