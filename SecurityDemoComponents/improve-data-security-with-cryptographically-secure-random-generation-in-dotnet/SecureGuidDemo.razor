@using System.Security.Cryptography

<button class="[ bg-fuchsia-500 ] [ px-4 py-2 ] [ inline-block ] [ rounded-md ] [ inline-flex ] [ space-x-1 ]" @onclick="GenerateSecureGuid">
    <svg xmlns="http://www.w3.org/2000/svg" class="[ icon icon-tabler icons-tabler-outline icon-tabler-key ] [ text-white ]" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
        <path d="M16.555 3.843l3.602 3.602a2.877 2.877 0 0 1 0 4.069l-2.643 2.643a2.877 2.877 0 0 1 -4.069 0l-.301 -.301l-6.558 6.558a2 2 0 0 1 -1.239 .578l-.175 .008h-1.172a1 1 0 0 1 -.993 -.883l-.007 -.117v-1.172a2 2 0 0 1 .467 -1.284l.119 -.13l6.558 -6.558l-.301 -.301a2.877 2.877 0 0 1 0 -4.069l2.643 -2.643a2.877 2.877 0 0 1 4.069 0z" />
        <path d="M15 9h.01" />
    </svg>
    <span class="[ text-white ]">Generate Secure GUID</span>
</button>

@if (!string.IsNullOrEmpty(generatedGuid))
{
    <div class="[ mt-4 ]">
        <strong>Generated GUID:</strong> @generatedGuid
    </div>
}

@code {
    private string generatedGuid = string.Empty;

    private void GenerateSecureGuid()
    {
        // Create a 16-byte array for GUID data
        byte[] guidBytes = new byte[16];
        
        // Fill with cryptographically secure random data
        RandomNumberGenerator.Fill(guidBytes);
        
        // Apply RFC 4122 compliance (version 4 UUID)
        guidBytes[7] = (byte)((guidBytes[7] & 0x0F) | 0x40);
        guidBytes[8] = (byte)((guidBytes[8] & 0x3F) | 0x80);
        
        generatedGuid = new Guid(guidBytes).ToString();
        StateHasChanged();
    }
}
