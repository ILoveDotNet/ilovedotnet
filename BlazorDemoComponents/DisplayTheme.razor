@implements IAsyncDisposable

<section class="[ flex flex-col md:flex-row ] [ space-y-2 md:space-y-0 md:space-x-2 ]">
    <button class="[ bg-fuchsia-500 ] [ px-4 py-2 ] [ inline-block ] [ rounded-md ] [ inline-flex ] [ space-x-1 ]" @onclick="() => SetTheme(DisplayMode.Light)">
        <svg xmlns="http://www.w3.org/2000/svg" class="[ icon icon-tabler icon-tabler-brightness-up ] [ text-white ]" width="25" height="25" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
            <circle cx="12" cy="12" r="3"></circle>
            <line x1="12" y1="5" x2="12" y2="3"></line>
            <line x1="17" y1="7" x2="18.4" y2="5.6"></line>
            <line x1="19" y1="12" x2="21" y2="12"></line>
            <line x1="17" y1="17" x2="18.4" y2="18.4"></line>
            <line x1="12" y1="19" x2="12" y2="21"></line>
            <line x1="7" y1="17" x2="5.6" y2="18.4"></line>
            <line x1="6" y1="12" x2="4" y2="12"></line>
            <line x1="7" y1="7" x2="5.6" y2="5.6"></line>
        </svg>
        <span class="[ text-white ]">Light</span>
    </button>
    <button class="[ bg-fuchsia-500 ] [ px-4 py-2 ] [ inline-block ] [ rounded-md ] [ inline-flex ] [ space-x-1 ]" @onclick="() => SetTheme(DisplayMode.Dark)">
        <svg xmlns="http://www.w3.org/2000/svg" class="[ icon icon-tabler icon-tabler-moon ] [ text-white ]" width="25" height="25" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
            <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"></path>
        </svg>
        <span class="[ text-white ]">Dark</span>
    </button>
    <button class="[ bg-fuchsia-500 ] [ px-4 py-2 ] [ inline-block ] [ rounded-md ] [ inline-flex ] [ space-x-1 ]" @onclick="() => SetTheme(DisplayMode.System)">
        <svg xmlns="http://www.w3.org/2000/svg" class="[ icon icon-tabler icon-tabler-device-desktop ] [ text-white ]" width="25" height="25" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
            <rect x="3" y="4" width="18" height="12" rx="1"></rect>
            <line x1="7" y1="20" x2="17" y2="20"></line>
            <line x1="9" y1="16" x2="9" y2="20"></line>
            <line x1="15" y1="16" x2="15" y2="20"></line>
        </svg>
        <span class="[ text-white ]">System</span>
    </button>
</section>


@code {
    private IJSObjectReference? module;

    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./_content/BlazorDemoComponents/displaymode.js");            
        }
    }

    public async Task SetTheme(DisplayMode displayMode)
    {
        if (module is not null) 
        {
            await module.InvokeVoidAsync("onDisplayModeChanged", $"{displayMode.ToString().ToLower()}");
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
    }
}
