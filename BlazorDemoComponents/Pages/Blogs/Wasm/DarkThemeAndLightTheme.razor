@page "/blogs/blazor-wasm-dark-theme-and-light-theme"
@using BlazorDemoComponents
@inherits FragmentNavigationBase
@inject TableOfContents tableOfContents

<Content Slug=@Slug
         PosterPath=@PosterPath
         Channel="@Channel"
         ContentType="@ContentType"
         TotalContents=@TotalContents
         Type="Blazor"
         FileName=@nameof(DarkThemeAndLightTheme)>
    <ContentBody>
        <p>
            In this article, let's learn about how to configure <ContentHighlight>dark theme</ContentHighlight> in Blazor WASM application.
        </p>

        <p>
            <strong>Note:</strong> If you have not done so already, I recommend you read the article on
            <NavLink class="[ underline ]" href="blogs/blazor-wasm-lazy-loading">Blazor WASM Lazy Loading</NavLink>.
        </p>

        <h3 class="[ font-semibold text-lg ]">Table of Contents</h3>

        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#what-is-dark-theme-and-why-it-is-needed")" Match="NavLinkMatch.All">
                    What is Dark Theme and Why it is needed?
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#steps-to-configure-dark-theme")" Match="NavLinkMatch.All">
                    Steps to configure dark theme
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#summary")" Match="NavLinkMatch.All">
                    Summary
                </NavLink>
            </li>
        </ol>

        <h3 id="what-is-dark-theme-and-why-it-is-needed" class="[ font-semibold text-lg ]">What is Dark Theme and Why it is needed?</h3>

        <p>
            Dark Mode or Theme has become common nowadays. Almost all the operating system, apps and websites started supporting Dark Mode as first class feature as it gives a pleasing 
            experience to eyes when reading or using the app at night time. So it's time to design dark version of apps or website to go along with the default design. Let's see how we 
            can implement this in Blazor application.
        </p>

        <h3 id="steps-to-configure-dark-theme" class="[ font-semibold text-lg ]">Steps to configure dark theme</h3>

        <p>
            First, lets have a <ContentHighlight>enum</ContentHighlight> <ContentHighlight>DisplayMode</ContentHighlight> to represent different display modes. Next, we need the help of 
            <ContentHighlight>Javascript</ContentHighlight> here to add respective <abbr title="Cascading Style Sheet">CSS</abbr> class to our document based on the option we select. We 
            can select <ContentHighlight>Light</ContentHighlight> mode, <ContentHighlight>Dark</ContentHighlight> mode or <ContentHighlight>System</ContentHighlight> mode to let it detect 
            based on operating systems default display mode.
        </p>

        <GithubGistSnippet Title="Display Theme Component to toggle Display Mode" UserId="fingers10" FileName="61c1c376a14a8126935ca276aaae6dbf"></GithubGistSnippet>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            When we click on button to set theme or mode, <ContentHighlight>SetTheme(DisplayMode displayMode)</ContentHighlight> method is called by <ContentHighlight>Blazor</ContentHighlight> 
            which in turn will use <ContentHighlight>JavaScript</ContentHighlight> to call <ContentHighlight>onDisplayModeChanged</ContentHighlight> function. If the selected 
            <ContentHighlight>DisplayMode</ContentHighlight> is <ContentHighlight>Dark</ContentHighlight> or <ContentHighlight>System</ContentHighlight> and if the operation system has dark 
            theme enabled? then we can set <ContentHighlight>dark</ContentHighlight> CSS Class to <ContentHighlight>HTML</ContentHighlight> document and store the user preference in 
            <ContentHighlight>Local Storage</ContentHighlight> to retain it for next time when the user visits our app.
        </p>

        <p>
            If the user has selecetd <ContentHighlight>Light</ContentHighlight> <ContentHighlight>DisplayMode</ContentHighlight> then we can remove the 
            <ContentHighlight>dark</ContentHighlight> CSS Class from the <ContentHighlight>HTML</ContentHighlight> document and also remove the entry from 
            <ContentHighlight>Local Storage</ContentHighlight>.
        </p>

        <GithubGistSnippet Title="Javascript function to store and toggle CSS class" UserId="fingers10" FileName="5064bb598d94a8d37b624ac4029b7295"></GithubGistSnippet>

        <p>
            Now that all set, we need to make sure to load the user preference when the user visits our site anytime in future. For this we can again use small 
            <ContentHighlight>Javascript</ContentHighlight> on page load in our <ContentHighlight>index.html</ContentHighlight> to check if the 
            <ContentHighlight>Local Storage</ContentHighlight> entry has <ContentHighlight>DisplayMode</ContentHighlight> key with <ContentHighlight>dark</ContentHighlight> value or we can 
            check if the operating system supports <ContentHighlight>Dark</ContentHighlight> mode. In both case we can add <ContentHighlight>dark</ContentHighlight> CSS class back to 
            <ContentHighlight>HTML</ContentHighlight> document. If both the above cases are not met then, we can leave it to default light theme.
        </p>

        <GithubGistSnippet Title="Javascript to toggle display mode CSS class on page load" UserId="fingers10" FileName="ceee90f0cd2a5db2e2fd12ea27f63e1d"></GithubGistSnippet>

        <p>
            Time for a live demo. Try with below demo and make sure to inspect and see how CSS classed are toggled in <ContentHighlight>HTML</ContentHighlight> along with 
            <ContentHighlight>Local Storage</ContentHighlight> changes.
        </p>

        <DemoSnippet Title="Display Mode">
            <p class="[ text-black ] [ dark:text-white ]">
                <b>
                    Click on one of the display mode and see how the I ❤️ DotNet responds.
                </b>
            </p>
            <DisplayTheme></DisplayTheme>
        </DemoSnippet>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="summary" class="[ font-semibold text-lg ]">Summary</h3>

        <p>
            In this article we saw how to configure dark theme in blazor wasm application. We saw how to apply system theme by default and we also saw a live demo of how i love dotnet responds 
            to dark theme.
        </p>
    </ContentBody>
</Content>

@code {
    private string Slug = "blazor-wasm-dark-theme-and-light-theme";
    private string PosterPath = "Blogs/Blazor/Wasm";
    private string Channel = "blazor";
    private string ContentType = "blogs";
    private ushort TotalContents => (ushort)tableOfContents.Contents.Count(content => content.Type.Equals("Blazor", StringComparison.CurrentCultureIgnoreCase));
}