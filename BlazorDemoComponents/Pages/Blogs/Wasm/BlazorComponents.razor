@page "/blogs/blazor-wasm-components"
@using BlazorDemoComponents
@inherits BasePage

<Content FileName=@nameof(BlazorComponents)>
    <ContentBody>
        <p>
            In this article, we will learn about <ContentHighlight>Components</ContentHighlight> in Blazor WebAssembly. We will also learn 
            <ContentHighlight>how to create a component</ContentHighlight> and use it in our Blazor application. We will also see a 
            <ContentHighlight>live demo</ContentHighlight> of how to create a component and use it in our Blazor application.
        </p>

        <p>
            <strong>Note:</strong> If you have not done so already, I recommend you read the article on
            <NavLink href="blogs/blazor-wasm-introduction">Blazor Wasm Introduction</NavLink>.
        </p>

        <h3>Table of Contents</h3>

        <ol>
            <li>
                <NavLink href="@($"blogs/{Slug}#what-is-component-in-blazor")" Match="NavLinkMatch.All">
                    What is Components in blazor?
                </NavLink>
            </li>
            <li>
                <NavLink href="@($"blogs/{Slug}#how-to-create-a-component-in-blazor")" Match="NavLinkMatch.All">
                    How to create a component in blazor?
                </NavLink>
            </li>
            <li>
                <NavLink href="@($"blogs/{Slug}#summary")" Match="NavLinkMatch.All">
                    Summary
                </NavLink>
            </li>
        </ol>

        <h3 id="what-is-component-in-blazor">What is Components in blazor?</h3>

        <p>
            A <ContentHighlight>Blazor Component</ContentHighlight> is a reusable piece of UI in a Blazor application. This helps you to wrap html elements and their events into a reusable UI 
            code blocks. You can nest components in a component. Let me show you a simple example of a Blazor component.
        </p>

        <figure>
            <img src="./image/blogs/blazor/wasm/components/what-is-components.png" alt="what is components?" class="[ w-full ]" />
        </figure>

        <p>
            You can see <ContentHighlight>Dialog.razor</ContentHighlight> component which contains a button and on click of it <ContentHighlight>OnYes event</ContentHighlight> will be invoked. 
            We can also nest component like how we have <ContentHighlight>Dialog.razor</ContentHighlight> component inside <ContentHighlight>Index.razor</ContentHighlight> component. In this 
            case the <ContentHighlight>nested component (Dialog.razor)</ContentHighlight> becomes the <ContentHighlight>Child Component</ContentHighlight> and the 
            <ContentHighlight>containing component (Index.razor)</ContentHighlight> becomes <ContentHighlight>Parent Component</ContentHighlight>.
        </p>

        <p>
            A Blazor application is full of components. The <ContentHighlight>App</ContentHighlight> is the root component which contains Router Component which again contains 
            <ContentHighlight>Found</ContentHighlight> Component, etc. I ❤️ .NET has <ContentHighlight>Header</ContentHighlight> component which contains 
            <ContentHighlight>Search</ContentHighlight> Component, <ContentHighlight>Social</ContentHighlight> Component and <ContentHighlight>Theme</ContentHighlight> Component.
        </p>

        

        <h3 id="how-to-create-a-component-in-blazor">How to create a component in blazor?</h3>

        <p>
            To create a component you need to,
        </p>

        <ol>
            <li>Right click <ContentHighlight>Pages</ContentHighlight> folder or any folder expcet <ContentHighlight>wwwroot</ContentHighlight> folder inside your project.</li>
            <li>Click on <ContentHighlight>Add</ContentHighlight>.</li>
            <li>Click on <ContentHighlight>Razor Component</ContentHighlight>.</li>
            <li>Name your Component.</li>
            <li>Now remove the template code inside your component and add your html.</li>
            <li>That's it you created your first component</li>
            <li>Now you can use your component just like any other html element by adding <ContentHighlight>&lt;YourComponent /&gt;</ContentHighlight></li>
        </ol>

        <GithubGistSnippet Title="Blazor WASM Logo Component" UserId="fingers10" FileName="48c87cfe808874bb8471dc4bceda2e4c"></GithubGistSnippet>

        <DemoSnippet Title="Creating a Component">
            <p class="[ text-black ] [ dark:text-white ]">
                <b>
                    Scenario - Let's try rendering the above logo component from I ❤️ .NET
                </b>
            </p>
            <Logo></Logo>
        </DemoSnippet>

        <h3 id="summary">Summary</h3>

        <p>
            In this article, we learn't about what is component in blazor and how to create your own component and experienced a live demo. We also listed few components used in i love dotnet. 
            In our next article let's learn about how to pass data to child components from parent components.
        </p>
    </ContentBody>
</Content>