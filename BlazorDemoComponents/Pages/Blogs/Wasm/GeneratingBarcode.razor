@page "/blogs/how-to-generate-barcode-in-blazor-wasm"
@using BlazorDemoComponents
@inherits FragmentNavigationBase

<Content FileName=@nameof(GeneratingBarcode)>
    <ContentBody>
        <p>
            In this article, let's learn about <ContentHighlight>generating Barcode</ContentHighlight> in Blazor WASM apps.
        </p>

        <p>
            <strong>Note:</strong> If you have not done so already, I recommend you read the article on
            <NavLink class="[ underline ]" href="blogs/blazor-wasm-publishing-to-aws-amplify" Match="NavLinkMatch.All">Blazor WASM Publishing to AWS Amplify</NavLink>.
        </p>

        <h3 class="[ font-semibold text-lg ]">Table of Contents</h3>

        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#introduction")" Match="NavLinkMatch.All">
                    Introduction
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#generating-barcode")" Match="NavLinkMatch.All">
                    Generating Barcode
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#summary")" Match="NavLinkMatch.All">
                    Summary
                </NavLink>
            </li>
        </ol>

        <h3 id="introduction" class="[ font-semibold text-lg ]">Introduction</h3>

        <p>
            A week ago I got an requirement to generate barcodes in a Blazor WASM application. Upon searching the internet I was able to find some from,
        </p>

        <ul class="[ list-disc ] [ ml-4 ]">
            <li><NavLink class="[ underline ]" href="https://blazor.syncfusion.com/documentation/barcode/getting-started" target="_blank">Syncfusion Barcode Component</NavLink></li>
            <li><NavLink class="[ underline ]" href="https://www.barcoderesource.com/blazorbarcode.shtml" target="_blank">ConnectCode Barcode Resources</NavLink></li>
        </ul>

        <p>
            and ofcourse we can use them but we either need to get a licence or pay for it or the setup seemed complex. So, I thought of creating a simple barcode generator 
            using <ContentHighlight>HTML5 Canvas</ContentHighlight> and <ContentHighlight>C#</ContentHighlight> using 
            <ContentHighlight><NavLink class="[ underline ]" href="https://github.com/metafloor/bwip-js" target="_blank">bwip-js</NavLink></ContentHighlight>.
        </p>

        <h3 id="generating-barcode" class="[ font-semibold text-lg ]">Generating Barcode</h3>

        <p>
            Create a new component called <ContentHighlight>BwipJsBarcode.razor</ContentHighlight> and add the following code to it.
        </p>

        <GithubGistSnippet Title="Blazor WASM bwipjs Barcode Component" UserId="fingers10" FileName="1cd23451a2f2a56200c1fc4d0e3f0d7d"></GithubGistSnippet>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            In the above code we are just creating a <ContentHighlight>Canvas</ContentHighlight> element and assigning it an id of <ContentHighlight>bwipcanvas</ContentHighlight>. 
            And we are loading the our js helper module and calling generate barcode in the <ContentHighlight>OnAfterRenderAsync</ContentHighlight> method.
        </p>

        <p>
            <strong>Note:</strong> If you have not done so already, I recommend you read the article on
            <NavLink class="[ underline ]" href="blogs/blazor-wasm-javascript-interop-and-isolation" Match="NavLinkMatch.All">Blazor WASM Javascript Interop and Isolation</NavLink>.
        </p>

        <p>
            The above article will help you to understand how to interop with javascript from blazor wasm and vice versa. Here is the <ContentHighlight>bwipjs</ContentHighlight> 
            code to generate barcode.
        </p>

        <GithubGistSnippet Title="bwipjs barcode generation" UserId="fingers10" FileName="64be6db53125540aacea444233988f18"></GithubGistSnippet>

        <p>
            In the above code we are importing <ContentHighlight>bwip.min.js</ContentHighlight> library and just calling the <ContentHighlight>toCanvas</ContentHighlight> 
            method of <ContentHighlight>bwipjs</ContentHighlight> to generate the barcode with some default parameters. All these parameters can be passed to the 
            <ContentHighlight>BwipJsBarcode</ContentHighlight> component as parameters and can be passed to <ContentHighlight>generateBarcode()</ContentHighlight> js method 
            and made more dynamic and reusable.
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            Alright, now let's have a demo of how our bwip barcode component works. 
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <DemoSnippet Title="Generating Barcode using bwip-js in Blazor WASM">
            <p class="[ text-black ] [ dark:text-white ]">
                <b>
                    Scenario - Let's try generating barcode using our <ContentHighlight>BwipJsBarcode</ContentHighlight> component. Try inputting different values and click on 
                    Generate button.
                </b>
            </p>
            <BwipJsBarcode></BwipJsBarcode>
        </DemoSnippet>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            That's it all we have to do now is to make use of our <ContentHighlight>BwipJsBarcode</ContentHighlight> component and improve it by adding parameter and pass the 
            barcode text, type or any other options needed to it make it more dynamic and resuable.
        </p>

        <h3 id="summary" class="[ font-semibold text-lg ]">Summary</h3>

        <p>
            In this article we learnt how to generate barcode in blazor wasm application using <ContentHighlight>bwip-js</ContentHighlight>. We leveraged the power of HTML5 
            Canvas and C# to generate the barcode using bwip-js. In the next article we will learn how to print the generated barcode to labels using a label printer.
        </p>
    </ContentBody>
</Content>

@code {
    private string Slug = "how-to-generate-barcode-in-blazor-wasm";
}