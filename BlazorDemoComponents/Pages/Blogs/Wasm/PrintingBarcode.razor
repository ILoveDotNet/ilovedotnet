@page "/blogs/printing-barcode-to-label-printer-from-blazor-wasm"
@using BlazorDemoComponents
@inherits FragmentNavigationBase
@inject TableOfContents tableOfContents

<Content 
         Description=@Description
         CreatedOn=@CreatedOn
         ModifiedOn=@ModifiedOn
         Slug=@Slug
         PosterPath=@PosterPath
         Keywords=@Keywords
         Channel="@Channel"
         ContentType="@ContentType"
         TotalContents=@TotalContents
         Type="Blazor"
         FileName=@nameof(PrintingBarcode)>
    <ContentBody>
        <p>
            In this article, let's learn about <ContentHighlight>printing Barcode</ContentHighlight> to a label printer in Blazor WASM apps.
        </p>

        <p>
            <strong>Note:</strong> If you have not done so already, I recommend you read the article on
            <NavLink class="[ underline ]" href="blogs/how-to-generate-barcode-in-blazor-wasm" Match="NavLinkMatch.All">How to generate barcode in Blazor WASM</NavLink>.
        </p>

        <h3 class="[ font-semibold text-lg ]">Table of Contents</h3>

        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#introduction")" Match="NavLinkMatch.All">
                    Introduction
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#printing-barcode")" Match="NavLinkMatch.All">
                    Printing Barcode
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#summary")" Match="NavLinkMatch.All">
                    Summary
                </NavLink>
            </li>
        </ol>

        <h3 id="introduction" class="[ font-semibold text-lg ]">Introduction</h3>

        <p>
            In my previous post I wrote about generating barcode in Blazor WASM apps. As a bonus I got an <ContentHighlight>another opportunity to print barcode to 
            a label printer</ContentHighlight> from blazor wasm apps. This is a very common scenario in many industries like <ContentHighlight>manufacturing, retail, 
            logistics</ContentHighlight>, etc. where they need to print barcode. However it took a day for me to figure out how to achieve this via blazor wasm and 
            print to label printer using browser. So, I thought of writing this to help others to solve similar problem.
        </p>

        <p>
            There are many windows applications available in market to print barcode to label printer. There are even licensed reporting apps which can solve this 
            problem but <ContentHighlight>I'm always a fan of HTML and CSS. So, I decided to do it from blazor wasm app</ContentHighlight>. Lets see how we can 
            achieve this.
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="printing-barcode" class="[ font-semibold text-lg ]">Printing Barcode</h3>

        <p>
            I assume you have <ContentHighlight>good HTML5, CSS3 and JavaScript knowledge</ContentHighlight>. If not, I recommend you to learn them first. I'm not 
            going to explain the basics of HTML, CSS and JavaScript in this article. I will be using <ContentHighlight>HTML5</ContentHighlight>, 
            <ContentHighlight>CSS3</ContentHighlight> and <ContentHighlight>JavaScript</ContentHighlight> to achieve this. I will be using 
            <ContentHighlight>Blazor WASM</ContentHighlight> to build the UI.
        </p>

        <p>
            As a pre-requisite, we need label printer to be installed in our system. I'm using <ContentHighlight>TVS LP 46 NEO</ContentHighlight> label printer. 
            This is a plug and play printer and it comes with a <ContentHighlight>windows driver</ContentHighlight>. So, we need to install the driver in our system. 
            Once the driver is installed, we can see the printer getting detected in our system.
        </p>

        <figure>
            <img src="./image/blogs/blazor/wasm/printing-barcode-to-label-printer/tvs lp 46 neo bple printer.png" alt="tvs lp 46 neo bple printer" class="[ w-full ]" />
        </figure>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            Select your printer from installed pinters and go to <ContentHighlight>print preferences</ContentHighlight>. Under <ContentHighlight>Page Setup</ContentHighlight> 
            tab in <ContentHighlight>Stock</ContentHighlight> section edit the default <ContentHighlight>USER</ContentHighlight> profile to change the label size.
        </p>

        <figure>
            <img src="./image/blogs/blazor/wasm/printing-barcode-to-label-printer/printer preferences.png" alt="printer preferences" class="[ w-1/2 ]" />
        </figure>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            Next we need to <ContentHighlight>configure printer with our label size</ContentHighlight>. This is an important step. If we don't configure the printer 
            with our label size, then the printer will not print correctly. This step took me good amount of time to figure out. <ContentHighlight>The trick here is 
            to set the width to two label size 100mm (50mm + 50mm)</ContentHighlight>. Remember two labels per row. Let me make it easier for you folks.
        </p>

        <figure>
            <img src="./image/blogs/blazor/wasm/printing-barcode-to-label-printer/label size settings.png" alt="label size settings" class="[ w-1/2 ]" />
        </figure>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            Now under <ContentHighlight>Graphics</ContentHighlight> tab in <ContentHighlight>Dithering</ContentHighlight> section select 
            <ContentHighlight>None</ContentHighlight> to have barcode printed as solid barcode without any dots.
        </p>

        <figure>
            <img src="./image/blogs/blazor/wasm/printing-barcode-to-label-printer/graphics settings.png" alt="graphics settings" class="[ w-1/2 ]" />
        </figure>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            I need to print the barcode to the label of size <ContentHighlight>35mm height</ContentHighlight> and <ContentHighlight>50mm width</ContentHighlight>. 
            The label sheet will have <ContentHighlight>two labels in one row</ContentHighlight>. We need to convert <ContentHighlight>each row to page</ContentHighlight> 
            using css and make browser understand one row as one page. Once we do this when we print from browser, the browser will send print for each page and that 
            will be printed in one row from our label printer.
        </p>

        <p>
            Here is how the actual label roll sheet looks like.
        </p>

        <figure>
            <img src="./image/blogs/blazor/wasm/printing-barcode-to-label-printer/label sheet.png" alt="label sheet" class="[ w-1/2 ]" />
        </figure>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <GithubGistSnippet Title="Blazor WASM Barcode Print Component" UserId="fingers10" FileName="a355e2c9e5fc14ca81392d1087bb118e"></GithubGistSnippet>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            In the above code,
        </p>

        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>We are getting number of label count as input from user.</li>
            <li>
                Once the user inputs the <ContentHighlight>Count</ContentHighlight>, the bind action will calculate number of rows it needs to print and store it 
                in <ContentHighlight>_rows</ContentHighlight>.
            </li>
            <li>
                We are using <ContentHighlight>Math.DivRem</ContentHighlight> to find the <ContentHighlight>quotient</ContentHighlight> and 
                <ContentHighlight>remainder</ContentHighlight> and add remainder to rows count.
            </li>
            <li>Now immediately the UI will be rendered with <ContentHighlight>two barcodes in each row</ContentHighlight> based on row count.</li>
            <li>Thats it we are ready with our HTML setup.</li>
            <li>
                Here I have hidden the <ContentHighlight>#barcode-section-to-print</ContentHighlight> purposefully to avoid all the plumbing works not visible 
                to user for <ContentHighlight>better user experience</ContentHighlight>.
            </li>
        </ol>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <GithubGistSnippet Title="Blazor WASM Barcode Print Component CSS" UserId="fingers10" FileName="02cc90591f1b6d010b566b510f4267c1"></GithubGistSnippet>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            In the above <ContentHighlight>@@print @@media</ContentHighlight> css code,
        </p>

        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>We are adjusting the <ContentHighlight>position</ContentHighlight> of document to be printed.</li>
            <li>
                Then we are setting the <ContentHighlight>max-width</ContentHighlight> of <ContentHighlight>html</ContentHighlight> and 
                <ContentHighlight>body</ContentHighlight> to <ContentHighlight>100mm (it's because we will have two labels in on row 50mm + 50mm)</ContentHighlight> 
                and <ContentHighlight>max-height</ContentHighlight> to <ContentHighlight>35mm</ContentHighlight>.
            </li>
            <li>
                Now we are using <ContentHighlight>CSS3 GRID</ContentHighlight> to layout our barcodes inside <ContentHighlight>article</ContentHighlight> tag in 
                two columns per row.
            </li>
            <li>
                Each barcode inside <ContentHighlight>section</ContentHighlight> tag will be using <ContentHighlight>CSS3 Flex</ContentHighlight> to layout its 
                content.
            </li>
            <li>
                Keep an eye on <ContentHighlight>page-break-after: always;</ContentHighlight> inside <ContentHighlight>article</ContentHighlight> tag. This css 
                is <ContentHighlight>responsible for making each row as separate page in browser</ContentHighlight>.
            </li>
            <li>You can add rest of the css to adjust font, padding, margin and spacing to make sure barcode is on correct position in physical print output.</li>
        </ol>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <GithubGistSnippet Title="Blazor WASM Barcode Print Component JS" UserId="fingers10" FileName="24c6f9eb4e73c35e096342bfbf9c607c"></GithubGistSnippet>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            Now we are done with <ContentHighlight>skeleton (HTML5)</ContentHighlight> and <ContentHighlight>makeup (CSS3)</ContentHighlight>. We still need some 
            <ContentHighlight>JavaScript</ContentHighlight> to make it work. Let's see what we have done in the above code.
        </p>

        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>Import the <ContentHighlight>bwip.min.js</ContentHighlight> file using dynamic import.</li>
            <li>
                Define a function <ContentHighlight>printBarcode()</ContentHighlight> that will be called to <ContentHighlight>print the barcode from our 
                PrintBarcodeDemo component</ContentHighlight>.
            </li>
            <li>
                Create an <ContentHighlight>iframe</ContentHighlight> element or select an existing one with the ID 
                <ContentHighlight>barcode-print</ContentHighlight>.
            </li>
            <li>
                Set the ID of the iframe to <ContentHighlight>barcode-print</ContentHighlight>. This is to make sure if the element is already present that can 
                be reused.
            </li>
            <li>Append the <ContentHighlight>iframe</ContentHighlight> to the <ContentHighlight>document body</ContentHighlight>.</li>
            <li>
                Set the <ContentHighlight>HTML content</ContentHighlight> of the iframe's body to the HTML content of the element with the ID 
                <ContentHighlight>barcode-section-to-print</ContentHighlight>. This will bring our 
                <ContentHighlight>barcode HTML to the iframe body</ContentHighlight>.
            </li>
            <li>
                Create a <ContentHighlight>script</ContentHighlight> element to define a function that sets print styles. Note that we are setting 
                <ContentHighlight>@@print @@page size to 100mm 35mm</ContentHighlight>.
            </li>
            <li>Append the <ContentHighlight>print script</ContentHighlight> to the <ContentHighlight>iframe's head</ContentHighlight>.</li>
            <li>Create a <ContentHighlight>script</ContentHighlight> element to define a <ContentHighlight>function that draws barcodes</ContentHighlight>.</li>
            <li>Append the <ContentHighlight>barcode script</ContentHighlight> to the <ContentHighlight>iframe's head</ContentHighlight>.</li>
            <li>
                Create a <ContentHighlight>script</ContentHighlight> element to <ContentHighlight>fetch</ContentHighlight> CSS and JavaScript files, and call 
                <ContentHighlight>function to draw the barcode for each canvas element</ContentHighlight> and <ContentHighlight>call window.print()</ContentHighlight> 
                inside <ContentHighlight>iframe</ContentHighlight>.
            </li>
            <li>Append the <ContentHighlight>body script</ContentHighlight> to the <ContentHighlight>iframe's body</ContentHighlight>.</li>
        </ol>

        <p>
            That's it above setup will nicely generate barcode and layout it in two columns per row and print it to the label printer.
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <DemoSnippet Title="Printing Barcode to label printer from Blazor WASM">
            <p class="[ text-black ] [ dark:text-white ]">
                <b>
                    Scenario - Let's try printing barcode using our <ContentHighlight>PrintingBarcodeDemo</ContentHighlight> component. Try inputting different 
                    values and click on Print button.
                </b>
            </p>
            <PrintingBarcodeDemo></PrintingBarcodeDemo>
        </DemoSnippet>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            In a nutshell, the <ContentHighlight>trick</ContentHighlight> here is to use <ContentHighlight>CSS3 GRID</ContentHighlight> and 
            <ContentHighlight>CSS3 FLEX</ContentHighlight> to layout the barcodes in <ContentHighlight>two columns per row</ContentHighlight> and use 
            <ContentHighlight>CSS3 @@media print</ContentHighlight> to set the page size and use <ContentHighlight>@@page-break-after: always;</ContentHighlight> 
            to make each row as separate page. Once we do this, the browser will send print for each page and that will be printed in one row from our label printer.
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            Finally select your <ContentHighlight>barcode printer</ContentHighlight> from browser and <ContentHighlight>uncheck default header and footer</ContentHighlight> 
            from browser print window and also <ContentHighlight>set margins to none</ContentHighlight> in browser print window and most importantly select 
            <ContentHighlight>Paper Size</ContentHighlight> as <ContentHighlight>USER</ContentHighlight> profile which we edited in <ContentHighlight>Page Setup</ContentHighlight> 
            under <ContentHighlight>Printer Preferences</ContentHighlight> and click on <ContentHighlight>Print</ContentHighlight>. That's it you will see the barcode 
            printed in your label printer.
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <p>
            Note that browser print window itself show the barcodes in 2 pages in below image which will print in two rows in label sheet.
        </p>

        <figure>
            <img src="./image/blogs/blazor/wasm/printing-barcode-to-label-printer/browser print window.png" alt="browser print window" class="[ w-full ]" />
        </figure>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="summary" class="[ font-semibold text-lg ]">Summary</h3>

        <p>
            In this article we learnt how to <ContentHighlight>print barcode to label printer from blazor wasm application</ContentHighlight>. We learnt how to 
            configure printer page based on our label size and we used the power of HTML5 and CSS3 to print barcode to labels from browser without any third 
            party apps. Hope you enjoyed reading this article and it saved a lot of time for you.
        </p>
    </ContentBody>
</Content>

@code {
    private string Description = "In this post I will teach how to print barcode to label printer from blazor wasm application. All with live working demo.";
    private DateTime CreatedOn = new DateTime(2023, 7, 2, 22, 30, 0);
    private DateTime ModifiedOn = new DateTime(2023, 7, 2, 22, 30, 0);
    private string Slug = "printing-barcode-to-label-printer-from-blazor-wasm";
    private string PosterPath = "Blogs/Blazor/Wasm";
    private string Channel = "blazor";
    private string ContentType = "blogs";
    private ushort TotalContents => (ushort)tableOfContents.Contents.Count(content => content.Type.Equals("Blazor", StringComparison.CurrentCultureIgnoreCase));
    private List<string> Keywords = new(2) { "Barcode", "bwip-js" };
}