@using System.ComponentModel.DataAnnotations
@using FluentValidation

<EditForm Model="@exampleModel" OnValidSubmit="@HandleValidSubmit">
    <FluentValidator TValidator="FluentExampleModelValidator"/>
    <ValidationSummary />

    <InputText class="[ w-full h-full ] [ px-4 py-2 ] [ border-2 ] [ focus:outline-hidden focus:border-gray-400 ] [ dark:bg-black dark:border-gray-800 dark:focus:border-b-white dark:md:focus:border-blue-800 dark:caret-white dark:text-white ]"
               @bind-Value="exampleModel.Name" />
               
    <ValidationMessage For=@(() => exampleModel.Name)/>

    <button type="submit"
            class="[ bg-fuchsia-500 ] [ px-4 py-2 ] [ inline-block ] [ rounded-md ]">Submit</button>

    <p>
        @message
    </p>
</EditForm>

@code {
    public class FluentExampleModel
    {
        public string Name { get; set; } = string.Empty;
    }

    public class FluentExampleModelValidator : AbstractValidator<FluentExampleModel>
    {
        public FluentExampleModelValidator()
        {
            RuleFor(x => x.Name)
            .NotEmpty()
            .WithMessage("Name is required.")
            .MaximumLength(10)
            .WithMessage("Name is too long.");
        }
    }

    private FluentExampleModel exampleModel = new();
    private string? message;

    private void HandleValidSubmit()
    {
        message = "HandleValidSubmit called";

        // Process the valid form
    }
}