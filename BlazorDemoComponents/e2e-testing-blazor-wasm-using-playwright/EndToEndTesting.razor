@page "/blogs/e2e-testing-blazor-wasm-using-playwright"
@using BlazorDemoComponents
@inherits BasePage

<Content FileName=@nameof(EndToEndTesting) UseNewTableOfContentsMenu=true>
    <ContentBody>
        <What>
            <p>
                In this blog post, we will learn how to perform end-to-end testing of a Blazor WebAssembly application
                using Playwright. Playwright is a open sources tool that enables reliable end-to-end testing for modern
                web apps with a single API. It is developed by Microsoft and is a great tool for end-to-end testing of
                web applications.
            </p>
        </What>

        <Why>
            <p>
                End to end testing is essential open to be added to test suite because of the following reasons:
            </p>

            <ol>
                <li><strong>User Workflow Validation:</strong> Simulates real user interactions across the application,
                    ensuring workflows function as expected.</li>
                <li><strong>Integration Assurance:</strong> Verifies seamless communication between different components
                    like APIs, databases, and UIs.</li>
                <li><strong>Regression Prevention:</strong> Detects bugs caused by code changes in interconnected
                    systems.</li>
                <li><strong>Cross-Environment Testing:</strong> Confirms consistent behavior across multiple deployment
                    environments.</li>
                <li><strong>Improved User Experience:</strong> Ensures the application meets user expectations in
                    real-world scenarios.</li>
            </ol>

            <p>
                Playwright integrates with .NET via NUnit or MSTest, offering advanced features like element
                locators, assertions, and codegen for recording tests.
            </p>
        </Why>

        <How>
            <ol>
                <li>
                    <p>
                        The first step is to create e2e test project in a separate solution to avoid conflicts with
                        existing unit and integration tests.
                        Create a new solution and add a new project of type "NUnit Test Project (.NET Core)" using the
                        following cli command.
                    </p>

                    <GithubGistSnippet Title="Create NUnit Playwright project" UserId="fingers10"
                        FileName="a2d23ed2148d6c2d04406932f440bf32"></GithubGistSnippet>

                    <p>
                        This will create sln and csproj as shown below.
                    </p>

                    <figure>
                        <img src="./image/blogs/blazor/wasm/e2e-testing-blazor-wasm-using-playwright/E2E Solution and Project Structure.png"
                            alt="E2E Solution and Project Structure" class="[ w-full ]" />
                    </figure>
                </li>
                <li>
                    <p>
                        Default Unit Test includes a <code>PageTest</code> base class with a <code>Page</code> object
                        for browser interaction.
                        I have updated the test to Navigate to I Love .NET's site, assert the title as shown below.
                    </p>

                    <GithubGistSnippet Title="Home page E2E Test" UserId="fingers10"
                        FileName="dfd1e331345bd61bac3bb0079223bd2f"></GithubGistSnippet>
                </li>
                <li>
                    <p>
                        Now run the Project and run the test. I'm running this in mac for first time and noticed the
                        below error.
                    </p>

                    <figure>
                        <img src="./image/blogs/blazor/wasm/e2e-testing-blazor-wasm-using-playwright/Playwright First Run Error.png"
                            alt="Playwright First Run Error" class="[ w-full ]" />
                    </figure>
                </li>
                <li>
                    <p>
                        I resolved the above error by installing powershell in mac as shown below
                    </p>

                    <figure>
                        <img src="./image/blogs/blazor/wasm/e2e-testing-blazor-wasm-using-playwright/Install PowerShell in Mac.png"
                            alt="Install PowerShell in Mac" class="[ w-full ]" />
                    </figure>
                </li>
                <li>
                    <p>
                        Now we need to run <ContentHighlight>/bin/Debug/net9.0/playwright.ps1</ContentHighlight> as
                        shown below.
                    </p>

                    <figure>
                        <img src="./image/blogs/blazor/wasm/e2e-testing-blazor-wasm-using-playwright/Install Playwright Power Shell Script.png"
                            alt="Install Playwright Power Shell Script" class="[ w-full ]" />
                    </figure>
                </li>
                <li>
                    <p>
                        Now run the test and it should pass as shown below.
                    </p>

                    <figure>
                        <img src="./image/blogs/blazor/wasm/e2e-testing-blazor-wasm-using-playwright/First E2E Test Run.png"
                            alt="First E2E Test Run" class="[ w-full ]" />
                    </figure>
                </li>
            </ol>

            <h4>Recording a test to create it automatically</h4>


        </How>

        <Summary>

        </Summary>
    </ContentBody>
</Content>