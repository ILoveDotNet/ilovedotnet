@page "/blogs/send-notifications-using-ihubcontext-and-caller-in-signalr"
@inherits FragmentNavigationBase

<Content FileName=@nameof(IHubContextAndCaller)>
    <ContentBody>
        <p>
            In this article, let's learn about <ContentHighlight>IHubContext</ContentHighlight> and <ContentHighlight>Caller</ContentHighlight> 
            in <ContentHighlight>SignalR</ContentHighlight>.
        </p>

        <p>
            <strong>Note:</strong> If you have not done so already, I recommend you read the article on
            <NavLink class="[ underline ]" href="blogs/types-of-clients-in-signalr" Match="NavLinkMatch.All">Types of Clients in SignalR</NavLink>.
        </p>

        <h3 class="[ font-semibold text-lg ]">Table of Contents</h3>

        <ol class="[ list-decimal ] [ ml-4 ]">
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#introduction")" Match="NavLinkMatch.All">
                    Introduction
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#i-hubcontext-and-caller")" Match="NavLinkMatch.All">
                    IHubContext and Caller
                </NavLink>
            </li>
            <li>
                <NavLink class="[ underline ]" href="@($"blogs/{Slug}#summary")" Match="NavLinkMatch.All">
                    Summary
                </NavLink>
            </li>
        </ol>

        <h3 id="introduction" class="[ font-semibold text-lg ]">Introduction</h3>

        <p>
            In our previous article we learnt the different types of <ContentHighlight>clients</ContentHighlight> in SignalR. Today in this article lets 
            dive deep into the <ContentHighlight>server and client features</ContentHighlight> available in SignalR in .NET. One among them is the 
            <ContentHighlight>IHubContext</ContentHighlight> and <ContentHighlight>Caller</ContentHighlight> available in SignalR.
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="i-hubcontext-and-caller" class="[ font-semibold text-lg ]">IHubContext and Caller</h3>

        <p>
            The <ContentHighlight>IHubContext interface</ContentHighlight>, which is tailored to each hub, can be <ContentHighlight>injected</ContentHighlight> 
            and then used to access the <ContentHighlight>hub's client</ContentHighlight> property. It's super handy to have IHubContext available in 
            dependency injection because it means we can tap into it from anywhere in the app where the <ContentHighlight>Hub class</ContentHighlight> is 
            hanging out. But there's a catch: The <ContentHighlight>caller</ContentHighlight> is only accessible within the hub itself, not through 
            <ContentHighlight>IHubContext</ContentHighlight>.
        </p>

        <GithubGistSnippet Title="IHubContext and Caller" UserId="fingers10" FileName="6004fe10717dcb27a02eace5b5fc8f70"></GithubGistSnippet>

        <p>
            <ContentHighlight>This leaves us with no possibility to send any notifications to the Caller alone</ContentHighlight>. But there's also the 
            possibility to put clients in groups and then send messages to a specific group.
        </p>

        <GoogleAdSense Type="GoogleAdSenseAdType.InArticle" Format="GoogleAdSenseAdFormat.Fluid" Style="text-align:center;" Slot="3914293965"></GoogleAdSense>

        <h3 id="summary" class="[ font-semibold text-lg ]">Summary</h3>

        <p>
            In this article, we learnt about <ContentHighlight>IHubContext</ContentHighlight> and <ContentHighlight>Caller</ContentHighlight> in SignalR. 
            We also saw how to use <ContentHighlight>IHubContext</ContentHighlight> to access the <ContentHighlight>hub's client</ContentHighlight> property. 
            In the next article, we will learn about <ContentHighlight>Groups</ContentHighlight> in SignalR.
        </p>
    </ContentBody>
</Content>

@code {
    private string Slug = "send-notifications-using-ihubcontext-and-caller-in-signalr";
}
